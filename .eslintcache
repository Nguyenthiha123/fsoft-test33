[{"C:\\Users\\DELL G3\\Desktop\\FSOFT\\test1\\react-project\\src\\index.js":"1","C:\\Users\\DELL G3\\Desktop\\FSOFT\\test1\\react-project\\src\\reportWebVitals.js":"2","C:\\Users\\DELL G3\\Desktop\\FSOFT\\test1\\react-project\\src\\App.js":"3","C:\\Users\\DELL G3\\Desktop\\FSOFT\\test1\\react-project\\src\\routers\\Index.js":"4","C:\\Users\\DELL G3\\Desktop\\FSOFT\\test1\\react-project\\src\\component\\Register\\index.js":"5","C:\\Users\\DELL G3\\Desktop\\FSOFT\\test1\\react-project\\src\\component\\Check\\index.js":"6","C:\\Users\\DELL G3\\Desktop\\FSOFT\\test1\\react-project\\src\\routers\\index.js":"7","C:\\Users\\DELL G3\\Desktop\\FSOFT\\test1\\react-project\\src\\component\\Report\\index.js":"8","C:\\Users\\DELL G3\\Desktop\\FSOFT\\test1\\react-project\\src\\component\\DangNhap\\index.js":"9","C:\\Users\\DELL G3\\Desktop\\FSOFT\\test1\\react-project\\src\\component\\Voice\\index.js":"10","C:\\Users\\DELL G3\\Desktop\\FSOFT\\test1\\react-project\\src\\component\\CheckVoice\\index.js":"11"},{"size":500,"mtime":499162500000,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"13"},{"size":195,"mtime":1608109639841,"results":"15","hashOfConfig":"13"},{"size":642,"mtime":1608005079805,"results":"16","hashOfConfig":"17"},{"size":4958,"mtime":1609749968792,"results":"18","hashOfConfig":"13"},{"size":2342,"mtime":1609835173886,"results":"19","hashOfConfig":"13"},{"size":1288,"mtime":1609916879821,"results":"20","hashOfConfig":"13"},{"size":5553,"mtime":1609920704542,"results":"21","hashOfConfig":"13"},{"size":1496,"mtime":1609750870802,"results":"22","hashOfConfig":"13"},{"size":7875,"mtime":1609836497408,"results":"23","hashOfConfig":"13"},{"size":3557,"mtime":1609917341909,"results":"24","hashOfConfig":"13"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"10gkjkq",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"pcvygj",{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"27"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"27"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"27"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"27"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\DELL G3\\Desktop\\FSOFT\\test1\\react-project\\src\\index.js",[],["52","53"],"C:\\Users\\DELL G3\\Desktop\\FSOFT\\test1\\react-project\\src\\reportWebVitals.js",[],"C:\\Users\\DELL G3\\Desktop\\FSOFT\\test1\\react-project\\src\\App.js",[],"C:\\Users\\DELL G3\\Desktop\\FSOFT\\test1\\react-project\\src\\routers\\Index.js",["54"],"C:\\Users\\DELL G3\\Desktop\\FSOFT\\test1\\react-project\\src\\component\\Register\\index.js",["55"],"import React from 'react'\r\nimport axios from 'axios'\r\nimport { useForm } from 'react-hook-form'\r\nimport { useHistory } from 'react-router-dom'\r\nimport Swal from 'sweetalert2'\r\nconst form = {\r\n    padding: '30px',\r\n    position: 'relative',\r\n    left: '380px'\r\n};\r\nconst mb = {\r\n    width: '500px'\r\n};\r\nconst label = {\r\n    float: 'left'\r\n};\r\nconst button = {\r\n    float: 'left',\r\n    position: 'relative',\r\n    top: '20px'\r\n};\r\nconst span = {\r\n    color: 'red'\r\n};\r\n\r\nconst Register = props => {\r\n    const { register, handleSubmit, watch, errors } = useForm();\r\n    const onSubmit = data => addRegister(data);\r\n    const history = useHistory()\r\n\r\n    const addRegister = async (e) => {\r\n        const Data = new FormData();\r\n        console.log(e.images1[0])\r\n        Data.append('id', 64646);\r\n        Data.append('image1', e.images1[0]);\r\n        Data.append('image2', e.images2[0]);\r\n        Data.append('image3', e.images3[0]);\r\n        Data.append('name', e.name);\r\n        Data.append('dob', e.dob);\r\n        console.log(Data)\r\n        const data = await axios.post('http://52.221.58.53:2020/api/register', Data, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            },\r\n        })\r\n        console.log(data)\r\n\r\n        history.push('/register')\r\n        Swal.fire(\r\n            'Thành công',\r\n            'You clicked the button!',\r\n            'success'\r\n        )\r\n    }\r\n    return (\r\n        <div className=\"container\">\r\n\r\n            <form style={form} onSubmit={handleSubmit(onSubmit)}>``\r\n                <h1 style={{ position: 'relative', left: '-370px' }} className=\"text-success\">Register</h1>\r\n                <div className=\"mb-3\" style={mb}>\r\n                    <label style={label} htmlFor=\"formFile\" className=\"form-label\">Hình ảnh<span style={span}>*</span></label>\r\n                    <input name='images1' ref={register({ required: true })} className=\"form-control\" type=\"file\" id=\"formFile\" />\r\n                    <small className=\"form-text text-danger\">\r\n                        {errors.name && errors.name.type === \"required\" && <span>Vui lòng không để trống</span>}\r\n                    </small>\r\n                </div>\r\n\r\n                <div className=\"mb-3\" style={mb}>\r\n                    <label style={label} htmlFor=\"formFile\" className=\"form-label\">Hình ảnh<span style={span}>*</span></label>\r\n                    <input name='images2' ref={register({ required: true })} className=\"form-control\" type=\"file\" id=\"formFile\" />\r\n                    <small className=\"form-text text-danger\">\r\n                        {errors.name && errors.name.type === \"required\" && <span>Vui lòng không để trống</span>}\r\n                    </small>\r\n                </div>\r\n\r\n                <div className=\"mb-3\" style={mb}>\r\n                    <label style={label} htmlFor=\"formFile\" className=\"form-label\">Hình ảnh<span style={span}>*</span></label>\r\n                    <input name='images3' ref={register({ required: true })} className=\"form-control\" type=\"file\" id=\"formFile\" />\r\n                    <small className=\"form-text text-danger\">\r\n                        {errors.name && errors.name.type === \"required\" && <span>Vui lòng không để trống</span>}\r\n                    </small>\r\n                </div>\r\n\r\n                <div className=\"mb-3\" style={mb}>\r\n                    <label style={label} htmlFor=\"exampleInputEmail1\" className=\"form-label\">Họ tên<span style={span}>*</span></label>\r\n                    <input name='name' ref={register({ required: true, minLength: 3 })} className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" />\r\n                    <small className=\"form-text text-danger\">\r\n                        {errors.name && errors.name.type === \"required\" && <span>Vui lòng không để trống</span>}\r\n                        {errors.name && errors.name.type === \"minLength\" && <span>Tên phải lớn hơn hoặc bằng 3 ký tự</span>}\r\n                    </small>\r\n                </div>\r\n\r\n                <div className=\"mb-3\" style={mb}>\r\n                    <label style={label} htmlFor=\"exampleInputPassword1\" className=\"form-label\">Ngày sinh<span style={span}>*</span></label>\r\n                    <input name='dob' type='date' ref={register({ required: true, minLength: 3 })} className=\"form-control\" />\r\n                    <small className=\"form-text text-danger\">\r\n                        {errors.name && errors.name.type === \"required\" && <span>Vui lòng không để trống</span>}\r\n                        {errors.name && errors.name.type === \"minLength\" && <span>Tên phải lớn hơn hoặc bằng 3 ký tự</span>}\r\n                    </small>\r\n                </div>\r\n\r\n                <button style={button} type=\"submit\" className=\"btn btn-success\">Submit</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nRegister.propTypes = {\r\n}\r\n\r\nexport default Register\r\n","C:\\Users\\DELL G3\\Desktop\\FSOFT\\test1\\react-project\\src\\component\\Check\\index.js",["56","57"],"import React from 'react'\r\nimport axios from 'axios'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useForm } from 'react-hook-form'\r\nimport Swal from 'sweetalert2'\r\n\r\n\r\nconst form = {\r\n    padding: '30px',\r\n    position: 'relative',\r\n    left: '380px'\r\n};\r\nconst mb = {\r\n    width: '500px'\r\n};\r\nconst label = {\r\n    float: 'left'\r\n};\r\nconst button = {\r\n    position: 'relative',\r\n    left: '-370px',\r\n    top: '30px'\r\n};\r\n\r\nconst Check = props => {\r\n    const history = useHistory()\r\n    const { register, handleSubmit, watch, errors } = useForm();\r\n    const onSubmit = dataCheck => addCheck(dataCheck);\r\n\r\n    const addCheck = async (e) => {\r\n        const Data = new FormData();\r\n        Data.append('image1', e.images1[0]);\r\n        console.log(Data)\r\n        const dataCheck = await axios.post('http://52.221.58.53:2020/api/recognize', Data, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            },\r\n        })\r\n        const res = dataCheck.data;\r\n        if (res.status === 200) {\r\n            const data = res.data;\r\n            console.log(data);\r\n         \r\n            document.write('Ho ten:' + data.name + '<br/>' + 'Tuoi:' + data.dob);\r\n\r\n\r\n        } else {\r\n\r\n            history.push('/check')\r\n            Swal.fire(\r\n                'Hinh anh khong chinh xac',\r\n                'You clicked the button!',\r\n                'error'\r\n            )\r\n        }\r\n        console.log(dataCheck)\r\n\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h1 className=\"text-success\">Recognize</h1>\r\n            <form style={form} onSubmit={handleSubmit(onSubmit)}>\r\n                <div className=\"mb-3\" style={mb}>\r\n                    <label style={label} htmlFor=\"formFile\" className=\"form-label\">Hình ảnh</label>\r\n                    <input name='images1' ref={register({ required: true })} className=\"form-control\" type=\"file\" id=\"formFile\" />\r\n                    <small className=\"form-text text-danger\">\r\n                        {errors.name && errors.name.type === \"required\" && <span>Vui lòng không để trống</span>}\r\n                    </small>\r\n                </div>\r\n\r\n                <button style={button} type=\"submit\" className=\"btn btn-success\">Submit</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\nexport default Check\r\n","C:\\Users\\DELL G3\\Desktop\\FSOFT\\test1\\react-project\\src\\routers\\index.js",["58","59"],"C:\\Users\\DELL G3\\Desktop\\FSOFT\\test1\\react-project\\src\\component\\Report\\index.js",["60","61","62","63","64"],"C:\\Users\\DELL G3\\Desktop\\FSOFT\\test1\\react-project\\src\\component\\DangNhap\\index.js",["65","66","67","68"],"import React from 'react'\r\nimport axios from 'axios'\r\nimport { useForm } from 'react-hook-form'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst form = {\r\n    width: '500px',\r\n    height: '500px',\r\n    margin: 'auto',\r\n    position: 'relative',\r\n    top: '50px'\r\n};\r\nconst label = {\r\n    float: 'left',\r\n};\r\nconst button = {\r\n    position: 'relative',\r\n    top: '20px'\r\n};\r\nconst DangNhap = props => {\r\n    const { register, handleSubmit, watch, errors } = useForm();\r\n    const onSubmit = data => login(data);\r\n    const history = useHistory()\r\n\r\n    const login = async (e) => {\r\n        const Data = new FormData();\r\n        console.log(e.idNumber[0]);\r\n        Data.append('idNumber', e.idNumber[0]);\r\n\r\n    }\r\n    // history.push('/report')\r\n\r\n\r\n    return (\r\n        <div className='container'>\r\n            <h1>Đăng Nhập</h1>\r\n            <form style={form} onSubmit={handleSubmit(onSubmit)}>\r\n                <div className=\"form-group\">\r\n                    <label style={label} htmlFor=\"exampleInputEmail1\">Số căn cước công dân</label>\r\n                    <input type=\"number\" name='idNumber' ref={register({ required: true })} className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Phone Number\" />\r\n\r\n                </div>\r\n\r\n                <button style={button} type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nDangNhap.propTypes = {\r\n}\r\n\r\nexport default DangNhap\r\n","C:\\Users\\DELL G3\\Desktop\\FSOFT\\test1\\react-project\\src\\component\\Voice\\index.js",["69"],"import React from 'react'\r\nimport axios from 'axios'\r\nimport { useForm } from 'react-hook-form'\r\nimport { useHistory } from 'react-router-dom'\r\nimport Swal from 'sweetalert2'\r\nconst form = {\r\n    padding: '100px',\r\n    position: 'relative',\r\n    left: '380px'\r\n};\r\nconst mb = {\r\n    width: '400px',\r\n    'margin-left': '120px',\r\n};\r\nconst label = {\r\n    float: 'left'\r\n};\r\nconst button = {\r\n    position: 'relative',\r\n    top: '20px'\r\n};\r\nconst span = {\r\n    color: 'red'\r\n};\r\n\r\n\r\nconst Voice = props => {\r\n    const { register, handleSubmit, watch, errors } = useForm();\r\n    const onSubmit = data => voice(data);\r\n    const history = useHistory()\r\n\r\n    const voice = async (e) => {\r\n        const Data = new FormData();\r\n        console.log(e.audios1[0])\r\n        if (e.audios1[0] != null || undefined) {\r\n            Data.append('audios', e.audios1[0])\r\n        }\r\n        if (e.audios2[0] != null || undefined) {\r\n            Data.append('audios', e.audios2[0])\r\n        }\r\n        if (e.audios3[0] != null || undefined) {\r\n            Data.append('audios', e.audios3[0])\r\n        }\r\n\r\n        if (e.audios1[0] != null || undefined) {\r\n            Data.append('text[]', e.text1)\r\n        }\r\n        if (e.audios2[0] != null || undefined) {\r\n            Data.append('text[]', e.text2)\r\n        }\r\n        if (e.audios3[0] != null || undefined) {\r\n            Data.append('text[]', e.text3)\r\n        }\r\n        Data.append('name', e.name)\r\n\r\n        const data = await axios.post('http://52.221.81.214:4556/api/v1/voice/register', Data, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            },\r\n        })\r\n        console.log(data)\r\n\r\n        history.push('/voice')\r\n        Swal.fire(\r\n            'Thành công',\r\n            'You clicked the button!',\r\n            'success'\r\n        )\r\n    }\r\n    return (\r\n        <div className=\"container\">\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n                <h1 style={{}} className=\"text-success\">Register Voice</h1>\r\n                <div className=\"row\">\r\n                    <div className=\"col-6\">\r\n                        <div className=\"mb-3\" style={mb}>\r\n                            <label style={label} htmlFor=\"formFile\" className=\"form-label\">Giọng nói<span style={span}>*</span></label>\r\n                            <input name='audios1' ref={register({ required: true })} className=\"form-control\" type=\"file\" accept=\"audio\" id=\"formFile\" />\r\n                            <small className=\"form-text text-danger\">\r\n                                {errors.name && errors.name.type === \"required\" && <span>Vui lòng không để trống</span>}\r\n                            </small>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n                        <div className=\"mb-3\" style={mb}>\r\n                            <label style={label} htmlFor=\"exampleInputEmail1\" className=\"form-label\">Nội dung<span style={span}>*</span></label>\r\n                            <input name='text1' ref={register({ required: true, minLength: 3 })} className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" />\r\n                            <small className=\"form-text text-danger\">\r\n                                {errors.name && errors.name.type === \"required\" && <span>Vui lòng không để trống</span>}\r\n                                {errors.name && errors.name.type === \"minLength\" && <span>Tên phải lớn hơn hoặc bằng 3 ký tự</span>}\r\n                            </small>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-6\">\r\n                        <div className=\"mb-3\" style={mb}>\r\n                            <label style={label} htmlFor=\"formFile\" className=\"form-label\">Giọng nói<span style={span}>*</span></label>\r\n                            <input name='audios2' ref={register({ required: true })} className=\"form-control\" type=\"file\" accept=\"audio\" id=\"formFile\" />\r\n                            <small className=\"form-text text-danger\">\r\n                                {errors.name && errors.name.type === \"required\" && <span>Vui lòng không để trống</span>}\r\n                            </small>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n                        <div className=\"mb-3\" style={mb}>\r\n                            <label style={label} htmlFor=\"exampleInputEmail1\" className=\"form-label\">Nội dung<span style={span}>*</span></label>\r\n                            <input name='text2' ref={register({ required: true, minLength: 3 })} className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" />\r\n                            <small className=\"form-text text-danger\">\r\n                                {errors.name && errors.name.type === \"required\" && <span>Vui lòng không để trống</span>}\r\n                                {errors.name && errors.name.type === \"minLength\" && <span>Tên phải lớn hơn hoặc bằng 3 ký tự</span>}\r\n                            </small>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-6\">\r\n                        <div className=\"mb-3\" style={mb}>\r\n                            <label style={label} htmlFor=\"formFile\" className=\"form-label\">Giọng nói<span style={span}>*</span></label>\r\n                            <input name='audios3' ref={register({ required: true })} className=\"form-control\" type=\"file\" accept=\"audio\" id=\"formFile\" />\r\n                            <small className=\"form-text text-danger\">\r\n                                {errors.name && errors.name.type === \"required\" && <span>Vui lòng không để trống</span>}\r\n                            </small>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n                        <div className=\"mb-3\" style={mb}>\r\n                            <label style={label} htmlFor=\"exampleInputEmail1\" className=\"form-label\">Nội dung<span style={span}>*</span></label>\r\n                            <input name='text3' ref={register({ required: true, minLength: 3 })} className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" />\r\n                            <small className=\"form-text text-danger\">\r\n                                {errors.name && errors.name.type === \"required\" && <span>Vui lòng không để trống</span>}\r\n                                {errors.name && errors.name.type === \"minLength\" && <span>Tên phải lớn hơn hoặc bằng 3 ký tự</span>}\r\n                            </small>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"mb-3\" style={mb}>\r\n                    <label style={label} htmlFor=\"exampleInputEmail1\" className=\"form-label\">Họ tên<span style={span}>*</span></label>\r\n                    <input name='name' ref={register({ required: true, minLength: 3 })} className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" />\r\n                    <small className=\"form-text text-danger\">\r\n                        {errors.name && errors.name.type === \"required\" && <span>Vui lòng không để trống</span>}\r\n                        {errors.name && errors.name.type === \"minLength\" && <span>Tên phải lớn hơn hoặc bằng 3 ký tự</span>}\r\n                    </small>\r\n                </div>\r\n\r\n\r\n                <button style={button} type=\"submit\" className=\"btn btn-success\">Submit</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nVoice.propTypes = {\r\n\r\n}\r\n\r\nexport default Voice\r\n","C:\\Users\\DELL G3\\Desktop\\FSOFT\\test1\\react-project\\src\\component\\CheckVoice\\index.js",["70"],{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":2,"column":50,"nodeType":"77","messageId":"78","endLine":2,"endColumn":54},{"ruleId":"75","severity":1,"message":"79","line":27,"column":37,"nodeType":"77","messageId":"78","endLine":27,"endColumn":42},{"ruleId":"75","severity":1,"message":"79","line":27,"column":37,"nodeType":"77","messageId":"78","endLine":27,"endColumn":42},{"ruleId":"80","severity":1,"message":"81","line":44,"column":60,"nodeType":"82","messageId":"83","endLine":44,"endColumn":61},{"ruleId":"75","severity":1,"message":"76","line":2,"column":50,"nodeType":"77","messageId":"78","endLine":2,"endColumn":54},{"ruleId":"75","severity":1,"message":"84","line":6,"column":8,"nodeType":"77","messageId":"78","endLine":6,"endColumn":16},{"ruleId":"75","severity":1,"message":"85","line":1,"column":17,"nodeType":"77","messageId":"78","endLine":1,"endColumn":26},{"ruleId":"75","severity":1,"message":"86","line":20,"column":7,"nodeType":"77","messageId":"78","endLine":20,"endColumn":10},{"ruleId":"75","severity":1,"message":"79","line":44,"column":37,"nodeType":"77","messageId":"78","endLine":44,"endColumn":42},{"ruleId":"75","severity":1,"message":"87","line":44,"column":44,"nodeType":"77","messageId":"78","endLine":44,"endColumn":50},{"ruleId":"75","severity":1,"message":"88","line":50,"column":11,"nodeType":"77","messageId":"78","endLine":50,"endColumn":18},{"ruleId":"75","severity":1,"message":"89","line":2,"column":8,"nodeType":"77","messageId":"78","endLine":2,"endColumn":13},{"ruleId":"75","severity":1,"message":"79","line":21,"column":37,"nodeType":"77","messageId":"78","endLine":21,"endColumn":42},{"ruleId":"75","severity":1,"message":"87","line":21,"column":44,"nodeType":"77","messageId":"78","endLine":21,"endColumn":50},{"ruleId":"75","severity":1,"message":"88","line":23,"column":11,"nodeType":"77","messageId":"78","endLine":23,"endColumn":18},{"ruleId":"75","severity":1,"message":"79","line":28,"column":37,"nodeType":"77","messageId":"78","endLine":28,"endColumn":42},{"ruleId":"75","severity":1,"message":"79","line":33,"column":37,"nodeType":"77","messageId":"78","endLine":33,"endColumn":42},"no-native-reassign",["90"],"no-negated-in-lhs",["91"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'watch' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'DangNhap' is defined but never used.","'useEffect' is defined but never used.","'col' is assigned a value but never used.","'errors' is assigned a value but never used.","'history' is assigned a value but never used.","'axios' is defined but never used.","no-global-assign","no-unsafe-negation"]