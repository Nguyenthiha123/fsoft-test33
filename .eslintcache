[{"C:\\Users\\DELL G3\\Desktop\\FSOFT\\test1\\react-project\\src\\index.js":"1","C:\\Users\\DELL G3\\Desktop\\FSOFT\\test1\\react-project\\src\\reportWebVitals.js":"2","C:\\Users\\DELL G3\\Desktop\\FSOFT\\test1\\react-project\\src\\App.js":"3","C:\\Users\\DELL G3\\Desktop\\FSOFT\\test1\\react-project\\src\\routers\\Index.js":"4","C:\\Users\\DELL G3\\Desktop\\FSOFT\\test1\\react-project\\src\\component\\Register\\index.js":"5","C:\\Users\\DELL G3\\Desktop\\FSOFT\\test1\\react-project\\src\\component\\Check\\index.js":"6","C:\\Users\\DELL G3\\Desktop\\FSOFT\\test1\\react-project\\src\\routers\\index.js":"7","C:\\Users\\DELL G3\\Desktop\\FSOFT\\test1\\react-project\\src\\component\\Report\\index.js":"8","C:\\Users\\DELL G3\\Desktop\\FSOFT\\test1\\react-project\\src\\component\\Voice\\index.js":"9","C:\\Users\\DELL G3\\Desktop\\FSOFT\\test1\\react-project\\src\\component\\CheckVoice\\index.js":"10","C:\\Users\\DELL G3\\Desktop\\FSOFT\\Reactjs\\fsoft-test33\\src\\index.js":"11","C:\\Users\\DELL G3\\Desktop\\FSOFT\\Reactjs\\fsoft-test33\\src\\reportWebVitals.js":"12","C:\\Users\\DELL G3\\Desktop\\FSOFT\\Reactjs\\fsoft-test33\\src\\App.js":"13","C:\\Users\\DELL G3\\Desktop\\FSOFT\\Reactjs\\fsoft-test33\\src\\routers\\index.js":"14","C:\\Users\\DELL G3\\Desktop\\FSOFT\\Reactjs\\fsoft-test33\\src\\component\\Register\\index.js":"15","C:\\Users\\DELL G3\\Desktop\\FSOFT\\Reactjs\\fsoft-test33\\src\\component\\Voice\\index.js":"16","C:\\Users\\DELL G3\\Desktop\\FSOFT\\Reactjs\\fsoft-test33\\src\\component\\Check\\index.js":"17","C:\\Users\\DELL G3\\Desktop\\FSOFT\\Reactjs\\fsoft-test33\\src\\component\\Report\\index.js":"18","C:\\Users\\DELL G3\\Desktop\\FSOFT\\Reactjs\\fsoft-test33\\src\\component\\CheckVoice\\index.js":"19","C:\\Users\\DELL G3\\Desktop\\FSOFT\\Reactjs\\fsoft-test33\\src\\component\\RecognizeHistory\\index.js":"20"},{"size":500,"mtime":499162500000,"results":"21","hashOfConfig":"22"},{"size":362,"mtime":499162500000,"results":"23","hashOfConfig":"22"},{"size":195,"mtime":1608109639841,"results":"24","hashOfConfig":"22"},{"size":642,"mtime":1608005079805,"results":"25","hashOfConfig":"26"},{"size":4958,"mtime":1609749968792,"results":"27","hashOfConfig":"22"},{"size":2342,"mtime":1609835173886,"results":"28","hashOfConfig":"22"},{"size":1121,"mtime":1610010503374,"results":"29","hashOfConfig":"22"},{"size":7050,"mtime":1610010416230,"results":"30","hashOfConfig":"22"},{"size":7875,"mtime":1609836497408,"results":"31","hashOfConfig":"22"},{"size":3526,"mtime":1610005981112,"results":"32","hashOfConfig":"22"},{"size":500,"mtime":499162500000,"results":"33","hashOfConfig":"34"},{"size":362,"mtime":499162500000,"results":"35","hashOfConfig":"34"},{"size":195,"mtime":1608109639841,"results":"36","hashOfConfig":"34"},{"size":1227,"mtime":1610524487267,"results":"37","hashOfConfig":"34"},{"size":3693,"mtime":1610521810503,"results":"38","hashOfConfig":"34"},{"size":7866,"mtime":1610445434548,"results":"39","hashOfConfig":"34"},{"size":4822,"mtime":1610521653605,"results":"40","hashOfConfig":"34"},{"size":7010,"mtime":1610524767457,"results":"41","hashOfConfig":"34"},{"size":3688,"mtime":1610508195316,"results":"42","hashOfConfig":"34"},{"size":6249,"mtime":1610524925551,"results":"43","hashOfConfig":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"10gkjkq",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"pcvygj",{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},"df9924",{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"71"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"71"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"71"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"71"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"71"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"71"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\DELL G3\\Desktop\\FSOFT\\test1\\react-project\\src\\index.js",[],["96","97"],"C:\\Users\\DELL G3\\Desktop\\FSOFT\\test1\\react-project\\src\\reportWebVitals.js",[],"C:\\Users\\DELL G3\\Desktop\\FSOFT\\test1\\react-project\\src\\App.js",[],"C:\\Users\\DELL G3\\Desktop\\FSOFT\\test1\\react-project\\src\\routers\\Index.js",["98"],"C:\\Users\\DELL G3\\Desktop\\FSOFT\\test1\\react-project\\src\\component\\Register\\index.js",["99"],"import React from 'react'\r\nimport axios from 'axios'\r\nimport { useForm } from 'react-hook-form'\r\nimport { useHistory } from 'react-router-dom'\r\nimport Swal from 'sweetalert2'\r\nconst form = {\r\n    padding: '30px',\r\n    position: 'relative',\r\n    left: '380px'\r\n};\r\nconst mb = {\r\n    width: '500px'\r\n};\r\nconst label = {\r\n    float: 'left'\r\n};\r\nconst button = {\r\n    float: 'left',\r\n    position: 'relative',\r\n    top: '20px'\r\n};\r\nconst span = {\r\n    color: 'red'\r\n};\r\n\r\nconst Register = props => {\r\n    const { register, handleSubmit, watch, errors } = useForm();\r\n    const onSubmit = data => addRegister(data);\r\n    const history = useHistory()\r\n\r\n    const addRegister = async (e) => {\r\n        const Data = new FormData();\r\n        console.log(e.images1[0])\r\n        Data.append('id', 64646);\r\n        Data.append('image1', e.images1[0]);\r\n        Data.append('image2', e.images2[0]);\r\n        Data.append('image3', e.images3[0]);\r\n        Data.append('name', e.name);\r\n        Data.append('dob', e.dob);\r\n        console.log(Data)\r\n        const data = await axios.post('http://52.221.58.53:2020/api/register', Data, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            },\r\n        })\r\n        console.log(data)\r\n\r\n        history.push('/register')\r\n        Swal.fire(\r\n            'Thành công',\r\n            'You clicked the button!',\r\n            'success'\r\n        )\r\n    }\r\n    return (\r\n        <div className=\"container\">\r\n\r\n            <form style={form} onSubmit={handleSubmit(onSubmit)}>``\r\n                <h1 style={{ position: 'relative', left: '-370px' }} className=\"text-success\">Register</h1>\r\n                <div className=\"mb-3\" style={mb}>\r\n                    <label style={label} htmlFor=\"formFile\" className=\"form-label\">Hình ảnh<span style={span}>*</span></label>\r\n                    <input name='images1' ref={register({ required: true })} className=\"form-control\" type=\"file\" id=\"formFile\" />\r\n                    <small className=\"form-text text-danger\">\r\n                        {errors.name && errors.name.type === \"required\" && <span>Vui lòng không để trống</span>}\r\n                    </small>\r\n                </div>\r\n\r\n                <div className=\"mb-3\" style={mb}>\r\n                    <label style={label} htmlFor=\"formFile\" className=\"form-label\">Hình ảnh<span style={span}>*</span></label>\r\n                    <input name='images2' ref={register({ required: true })} className=\"form-control\" type=\"file\" id=\"formFile\" />\r\n                    <small className=\"form-text text-danger\">\r\n                        {errors.name && errors.name.type === \"required\" && <span>Vui lòng không để trống</span>}\r\n                    </small>\r\n                </div>\r\n\r\n                <div className=\"mb-3\" style={mb}>\r\n                    <label style={label} htmlFor=\"formFile\" className=\"form-label\">Hình ảnh<span style={span}>*</span></label>\r\n                    <input name='images3' ref={register({ required: true })} className=\"form-control\" type=\"file\" id=\"formFile\" />\r\n                    <small className=\"form-text text-danger\">\r\n                        {errors.name && errors.name.type === \"required\" && <span>Vui lòng không để trống</span>}\r\n                    </small>\r\n                </div>\r\n\r\n                <div className=\"mb-3\" style={mb}>\r\n                    <label style={label} htmlFor=\"exampleInputEmail1\" className=\"form-label\">Họ tên<span style={span}>*</span></label>\r\n                    <input name='name' ref={register({ required: true, minLength: 3 })} className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" />\r\n                    <small className=\"form-text text-danger\">\r\n                        {errors.name && errors.name.type === \"required\" && <span>Vui lòng không để trống</span>}\r\n                        {errors.name && errors.name.type === \"minLength\" && <span>Tên phải lớn hơn hoặc bằng 3 ký tự</span>}\r\n                    </small>\r\n                </div>\r\n\r\n                <div className=\"mb-3\" style={mb}>\r\n                    <label style={label} htmlFor=\"exampleInputPassword1\" className=\"form-label\">Ngày sinh<span style={span}>*</span></label>\r\n                    <input name='dob' type='date' ref={register({ required: true, minLength: 3 })} className=\"form-control\" />\r\n                    <small className=\"form-text text-danger\">\r\n                        {errors.name && errors.name.type === \"required\" && <span>Vui lòng không để trống</span>}\r\n                        {errors.name && errors.name.type === \"minLength\" && <span>Tên phải lớn hơn hoặc bằng 3 ký tự</span>}\r\n                    </small>\r\n                </div>\r\n\r\n                <button style={button} type=\"submit\" className=\"btn btn-success\">Submit</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nRegister.propTypes = {\r\n}\r\n\r\nexport default Register\r\n","C:\\Users\\DELL G3\\Desktop\\FSOFT\\test1\\react-project\\src\\component\\Check\\index.js",["100","101"],"import React from 'react'\r\nimport axios from 'axios'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useForm } from 'react-hook-form'\r\nimport Swal from 'sweetalert2'\r\n\r\n\r\nconst form = {\r\n    padding: '30px',\r\n    position: 'relative',\r\n    left: '380px'\r\n};\r\nconst mb = {\r\n    width: '500px'\r\n};\r\nconst label = {\r\n    float: 'left'\r\n};\r\nconst button = {\r\n    position: 'relative',\r\n    left: '-370px',\r\n    top: '30px'\r\n};\r\n\r\nconst Check = props => {\r\n    const history = useHistory()\r\n    const { register, handleSubmit, watch, errors } = useForm();\r\n    const onSubmit = dataCheck => addCheck(dataCheck);\r\n\r\n    const addCheck = async (e) => {\r\n        const Data = new FormData();\r\n        Data.append('image1', e.images1[0]);\r\n        console.log(Data)\r\n        const dataCheck = await axios.post('http://52.221.58.53:2020/api/recognize', Data, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            },\r\n        })\r\n        const res = dataCheck.data;\r\n        if (res.status === 200) {\r\n            const data = res.data;\r\n            console.log(data);\r\n         \r\n            document.write('Ho ten:' + data.name + '<br/>' + 'Tuoi:' + data.dob);\r\n\r\n\r\n        } else {\r\n\r\n            history.push('/check')\r\n            Swal.fire(\r\n                'Hinh anh khong chinh xac',\r\n                'You clicked the button!',\r\n                'error'\r\n            )\r\n        }\r\n        console.log(dataCheck)\r\n\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h1 className=\"text-success\">Recognize</h1>\r\n            <form style={form} onSubmit={handleSubmit(onSubmit)}>\r\n                <div className=\"mb-3\" style={mb}>\r\n                    <label style={label} htmlFor=\"formFile\" className=\"form-label\">Hình ảnh</label>\r\n                    <input name='images1' ref={register({ required: true })} className=\"form-control\" type=\"file\" id=\"formFile\" />\r\n                    <small className=\"form-text text-danger\">\r\n                        {errors.name && errors.name.type === \"required\" && <span>Vui lòng không để trống</span>}\r\n                    </small>\r\n                </div>\r\n\r\n                <button style={button} type=\"submit\" className=\"btn btn-success\">Submit</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\nexport default Check\r\n","C:\\Users\\DELL G3\\Desktop\\FSOFT\\test1\\react-project\\src\\routers\\index.js",["102"],"C:\\Users\\DELL G3\\Desktop\\FSOFT\\test1\\react-project\\src\\component\\Report\\index.js",["103","104","105","106","107","108"],"C:\\Users\\DELL G3\\Desktop\\FSOFT\\test1\\react-project\\src\\component\\Voice\\index.js",["109"],"import React from 'react'\r\nimport axios from 'axios'\r\nimport { useForm } from 'react-hook-form'\r\nimport { useHistory } from 'react-router-dom'\r\nimport Swal from 'sweetalert2'\r\nconst form = {\r\n    padding: '100px',\r\n    position: 'relative',\r\n    left: '380px'\r\n};\r\nconst mb = {\r\n    width: '400px',\r\n    'margin-left': '120px',\r\n};\r\nconst label = {\r\n    float: 'left'\r\n};\r\nconst button = {\r\n    position: 'relative',\r\n    top: '20px'\r\n};\r\nconst span = {\r\n    color: 'red'\r\n};\r\n\r\n\r\nconst Voice = props => {\r\n    const { register, handleSubmit, watch, errors } = useForm();\r\n    const onSubmit = data => voice(data);\r\n    const history = useHistory()\r\n\r\n    const voice = async (e) => {\r\n        const Data = new FormData();\r\n        console.log(e.audios1[0])\r\n        if (e.audios1[0] != null || undefined) {\r\n            Data.append('audios', e.audios1[0])\r\n        }\r\n        if (e.audios2[0] != null || undefined) {\r\n            Data.append('audios', e.audios2[0])\r\n        }\r\n        if (e.audios3[0] != null || undefined) {\r\n            Data.append('audios', e.audios3[0])\r\n        }\r\n\r\n        if (e.audios1[0] != null || undefined) {\r\n            Data.append('text[]', e.text1)\r\n        }\r\n        if (e.audios2[0] != null || undefined) {\r\n            Data.append('text[]', e.text2)\r\n        }\r\n        if (e.audios3[0] != null || undefined) {\r\n            Data.append('text[]', e.text3)\r\n        }\r\n        Data.append('name', e.name)\r\n\r\n        const data = await axios.post('http://52.221.81.214:4556/api/v1/voice/register', Data, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            },\r\n        })\r\n        console.log(data)\r\n\r\n        history.push('/voice')\r\n        Swal.fire(\r\n            'Thành công',\r\n            'You clicked the button!',\r\n            'success'\r\n        )\r\n    }\r\n    return (\r\n        <div className=\"container\">\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n                <h1 style={{}} className=\"text-success\">Register Voice</h1>\r\n                <div className=\"row\">\r\n                    <div className=\"col-6\">\r\n                        <div className=\"mb-3\" style={mb}>\r\n                            <label style={label} htmlFor=\"formFile\" className=\"form-label\">Giọng nói<span style={span}>*</span></label>\r\n                            <input name='audios1' ref={register({ required: true })} className=\"form-control\" type=\"file\" accept=\"audio\" id=\"formFile\" />\r\n                            <small className=\"form-text text-danger\">\r\n                                {errors.name && errors.name.type === \"required\" && <span>Vui lòng không để trống</span>}\r\n                            </small>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n                        <div className=\"mb-3\" style={mb}>\r\n                            <label style={label} htmlFor=\"exampleInputEmail1\" className=\"form-label\">Nội dung<span style={span}>*</span></label>\r\n                            <input name='text1' ref={register({ required: true, minLength: 3 })} className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" />\r\n                            <small className=\"form-text text-danger\">\r\n                                {errors.name && errors.name.type === \"required\" && <span>Vui lòng không để trống</span>}\r\n                                {errors.name && errors.name.type === \"minLength\" && <span>Tên phải lớn hơn hoặc bằng 3 ký tự</span>}\r\n                            </small>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-6\">\r\n                        <div className=\"mb-3\" style={mb}>\r\n                            <label style={label} htmlFor=\"formFile\" className=\"form-label\">Giọng nói<span style={span}>*</span></label>\r\n                            <input name='audios2' ref={register({ required: true })} className=\"form-control\" type=\"file\" accept=\"audio\" id=\"formFile\" />\r\n                            <small className=\"form-text text-danger\">\r\n                                {errors.name && errors.name.type === \"required\" && <span>Vui lòng không để trống</span>}\r\n                            </small>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n                        <div className=\"mb-3\" style={mb}>\r\n                            <label style={label} htmlFor=\"exampleInputEmail1\" className=\"form-label\">Nội dung<span style={span}>*</span></label>\r\n                            <input name='text2' ref={register({ required: true, minLength: 3 })} className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" />\r\n                            <small className=\"form-text text-danger\">\r\n                                {errors.name && errors.name.type === \"required\" && <span>Vui lòng không để trống</span>}\r\n                                {errors.name && errors.name.type === \"minLength\" && <span>Tên phải lớn hơn hoặc bằng 3 ký tự</span>}\r\n                            </small>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-6\">\r\n                        <div className=\"mb-3\" style={mb}>\r\n                            <label style={label} htmlFor=\"formFile\" className=\"form-label\">Giọng nói<span style={span}>*</span></label>\r\n                            <input name='audios3' ref={register({ required: true })} className=\"form-control\" type=\"file\" accept=\"audio\" id=\"formFile\" />\r\n                            <small className=\"form-text text-danger\">\r\n                                {errors.name && errors.name.type === \"required\" && <span>Vui lòng không để trống</span>}\r\n                            </small>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n                        <div className=\"mb-3\" style={mb}>\r\n                            <label style={label} htmlFor=\"exampleInputEmail1\" className=\"form-label\">Nội dung<span style={span}>*</span></label>\r\n                            <input name='text3' ref={register({ required: true, minLength: 3 })} className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" />\r\n                            <small className=\"form-text text-danger\">\r\n                                {errors.name && errors.name.type === \"required\" && <span>Vui lòng không để trống</span>}\r\n                                {errors.name && errors.name.type === \"minLength\" && <span>Tên phải lớn hơn hoặc bằng 3 ký tự</span>}\r\n                            </small>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"mb-3\" style={mb}>\r\n                    <label style={label} htmlFor=\"exampleInputEmail1\" className=\"form-label\">Họ tên<span style={span}>*</span></label>\r\n                    <input name='name' ref={register({ required: true, minLength: 3 })} className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" />\r\n                    <small className=\"form-text text-danger\">\r\n                        {errors.name && errors.name.type === \"required\" && <span>Vui lòng không để trống</span>}\r\n                        {errors.name && errors.name.type === \"minLength\" && <span>Tên phải lớn hơn hoặc bằng 3 ký tự</span>}\r\n                    </small>\r\n                </div>\r\n\r\n\r\n                <button style={button} type=\"submit\" className=\"btn btn-success\">Submit</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nVoice.propTypes = {\r\n\r\n}\r\n\r\nexport default Voice\r\n","C:\\Users\\DELL G3\\Desktop\\FSOFT\\test1\\react-project\\src\\component\\CheckVoice\\index.js",["110","111","112"],"import React, { useState } from 'react'\r\nimport axios from 'axios'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useForm } from 'react-hook-form'\r\nimport Swal from 'sweetalert2'\r\n\r\n\r\nconst form = {\r\n    // padding: '30px',\r\n    // position: 'relative',\r\n    // left: '380px'\r\n    margin: 'auto'\r\n};\r\nconst mb = {\r\n    width: '500px'\r\n};\r\nconst label = {\r\n    float: 'left'\r\n};\r\nconst button = {\r\n    position: 'relative',\r\n    left: '-370px',\r\n    top: '30px'\r\n};\r\nconst table = {\r\n    width: \"900px\",\r\n    margin: \"auto\",\r\n    position: \"relative\",\r\n    top: \"100px\"\r\n};\r\n\r\nconst CheckVoice = props => {\r\n    const history = useHistory()\r\n    const { register, handleSubmit, watch, errors } = useForm();\r\n    const users = [];\r\n    const [reportData, setData] = useState(users)\r\n    const onSubmit = dataCheck => Check(dataCheck);\r\n    const makeId = (length) => {\r\n        var result = '';\r\n        var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n        var charactersLength = characters.length;\r\n        for (var i = 0; i < length; i++) {\r\n            result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n        }\r\n        return result;\r\n    }\r\n\r\n    const Check = async (e) => {\r\n        const Data = new FormData();\r\n        Data.append('requestId', makeId(16));\r\n        Data.append('audious', e.audious1[0]);\r\n        // console.log(Data)\r\n        const dataCheck = await axios.post('http://52.221.81.214:4556/api/v1/voice/identify', Data, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            },\r\n        })\r\n\r\n        const res = dataCheck.data;\r\n        if (res.ErrorCode === 0) {\r\n            const data = res.Data;\r\n            console.log(data);\r\n        }\r\n        else {\r\n            history.push('/checkvoice')\r\n            Swal.fire(\r\n                'Giong noi khong chinh xac',\r\n                'You clicked the button!',\r\n                'error'\r\n            )\r\n        }\r\n        console.log(dataCheck)\r\n    }\r\n    return (\r\n        <div className='container'>\r\n\r\n\r\n\r\n            <h1 className=\"text-success\">Recognize Voice</h1>\r\n            <form style={form} onSubmit={handleSubmit(onSubmit)}>\r\n\r\n                <div className=\"mb-3\" style={mb}>\r\n                    <label style={label} htmlFor=\"formFile\" className=\"form-label\">Giọng nói</label>\r\n                    <input name='audious1' ref={register({ required: true })} className=\"form-control\" type=\"file\" id=\"formFile\" />\r\n                    <small className=\"form-text text-danger\">\r\n                        {errors.name && errors.name.type === \"required\" && <span>Vui lòng không để trống</span>}\r\n                    </small>\r\n                </div>\r\n                <button style={button} type=\"submit\" className=\"btn btn-success\">Submit</button>\r\n            </form>\r\n\r\n            <table style={table} className=\"table\">\r\n                <thead style={{ 'background-color': '#198754', color: 'white' }} className=\"thead-dark\">\r\n                    <tr>\r\n                        <th scope=\"col\">ID</th>\r\n                        <th scope=\"col\">Tên</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <th scope=\"row\">1</th>\r\n                        <td>hà</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nCheckVoice.propTypes = {\r\n\r\n}\r\n\r\nexport default CheckVoice\r\n","C:\\Users\\DELL G3\\Desktop\\FSOFT\\Reactjs\\fsoft-test33\\src\\index.js",[],["113","114"],"C:\\Users\\DELL G3\\Desktop\\FSOFT\\Reactjs\\fsoft-test33\\src\\reportWebVitals.js",[],"C:\\Users\\DELL G3\\Desktop\\FSOFT\\Reactjs\\fsoft-test33\\src\\App.js",[],"C:\\Users\\DELL G3\\Desktop\\FSOFT\\Reactjs\\fsoft-test33\\src\\routers\\index.js",["115","116","117","118","119","120"],"import React from 'react'\r\nimport { BrowserRouter as Router, Route, Switch, Link } from 'react-router-dom';\r\nimport Register from '../component/Register';\r\nimport Check from '../component/Check';\r\nimport Report from '../component/Report';\r\nimport RecognizeHistory from '../component/RecognizeHistory';\r\nimport Voice from '../component/Voice';\r\nimport CheckVoice from '../component/CheckVoice';\r\nconst Routers = props => {\r\n    return (\r\n        <div>\r\n            <Router>\r\n                <Switch>\r\n                    {/* <Route path=\"/\" exact>\r\n                        <Register />\r\n                    </Route>\r\n                    <Route path=\"/check\" exact>\r\n                        <Check />\r\n                    </Route>\r\n                    <Route path=\"/report\" exact>\r\n                        <Report />\r\n                    </Route> */}\r\n                    <Route path=\"/\" exact>\r\n                        <RecognizeHistory />\r\n                    </Route>\r\n\r\n                    {/*\r\n                    <Route path=\"/checkvoice\" exact>\r\n                        <CheckVoice />\r\n                    </Route> */}\r\n                </Switch>\r\n            </Router>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Routers\r\n","C:\\Users\\DELL G3\\Desktop\\FSOFT\\Reactjs\\fsoft-test33\\src\\component\\Register\\index.js",["121"],"import React from 'react'\r\nimport axios from 'axios'\r\nimport { useForm } from 'react-hook-form'\r\nimport { useHistory } from 'react-router-dom'\r\nimport Swal from 'sweetalert2'\r\nconst form = {\r\n    // padding: '30px',\r\n    // position: 'relative',\r\n    // left: '380px'\r\n    margin: 'auto'\r\n};\r\nconst mb = {\r\n    width: '500px',\r\n    margin: 'auto'\r\n};\r\nconst label = {\r\n    float: 'left'\r\n};\r\nconst button = {\r\n    margin: 'auto'\r\n\r\n};\r\nconst span = {\r\n    color: 'red'\r\n};\r\n\r\nconst Register = props => {\r\n    const { register, handleSubmit, watch, errors } = useForm();\r\n    const onSubmit = data => addRegister(data);\r\n    const history = useHistory()\r\n\r\n    const addRegister = async (e) => {\r\n        const Data = new FormData();\r\n        // console.log(e.images1[0])\r\n        Data.append('image', e.image[0]);\r\n        Data.append('name', e.name);\r\n\r\n        console.log(Data)\r\n        const data = await axios.post('https://facedemo-api.dev.trandata.io/api/v1/facedemo/register', Data, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            },\r\n        })\r\n        console.log(data)\r\n\r\n        history.push('/')\r\n        Swal.fire(\r\n            'Thành công',\r\n            'You clicked the button!',\r\n            'success'\r\n        )\r\n    }\r\n    return (\r\n        <div className=\"container\">\r\n            <form style={form} onSubmit={handleSubmit(onSubmit)}>\r\n                <h1 style={{ margin: 'auto' }} className=\"text-success\">Register</h1>\r\n                <div className=\"mb-3\" style={mb}>\r\n                    <label style={label} htmlFor=\"formFile\" className=\"form-label\">Hình ảnh<span style={span}>*</span></label>\r\n                    <input name='image' ref={register({ required: true })} className=\"form-control\" type=\"file\" id=\"formFile\" />\r\n                    <small className=\"form-text text-danger\">\r\n                        {errors.name && errors.name.type === \"required\" && <span>Vui lòng không để trống</span>}\r\n                    </small>\r\n                </div>\r\n\r\n                <div className=\"mb-3\" style={mb}>\r\n                    <label style={label} htmlFor=\"exampleInputEmail1\" className=\"form-label\">Họ tên<span style={span}>*</span></label>\r\n                    <input name='name' ref={register({ required: true, minLength: 3 })} className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" />\r\n                    <small className=\"form-text text-danger\">\r\n                        {errors.name && errors.name.type === \"required\" && <span>Vui lòng không để trống</span>}\r\n                        {errors.name && errors.name.type === \"minLength\" && <span>Tên phải lớn hơn hoặc bằng 3 ký tự</span>}\r\n                    </small>\r\n                </div>\r\n\r\n                {/* <div className=\"mb-3\" style={mb}>\r\n                    <label style={label} htmlFor=\"exampleInputPassword1\" className=\"form-label\">Ngày sinh<span style={span}>*</span></label>\r\n                    <input name='dob' type='date' ref={register({ required: true, minLength: 3 })} className=\"form-control\" />\r\n                    <small className=\"form-text text-danger\">\r\n                        {errors.name && errors.name.type === \"required\" && <span>Vui lòng không để trống</span>}\r\n                        {errors.name && errors.name.type === \"minLength\" && <span>Tên phải lớn hơn hoặc bằng 3 ký tự</span>}\r\n                    </small>\r\n                </div> */}\r\n\r\n                <button style={button} type=\"submit\" className=\"btn btn-success\">Submit</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nRegister.propTypes = {\r\n}\r\n\r\nexport default Register\r\n","C:\\Users\\DELL G3\\Desktop\\FSOFT\\Reactjs\\fsoft-test33\\src\\component\\Voice\\index.js",["122"],"import React from 'react'\r\nimport axios from 'axios'\r\nimport { useForm } from 'react-hook-form'\r\nimport { useHistory } from 'react-router-dom'\r\nimport Swal from 'sweetalert2'\r\nconst form = {\r\n    padding: '100px',\r\n    position: 'relative',\r\n    left: '380px'\r\n};\r\nconst mb = {\r\n    width: '400px',\r\n    'margin-left': '120px',\r\n};\r\nconst label = {\r\n    float: 'left'\r\n};\r\nconst button = {\r\n    position: 'relative',\r\n    top: '20px'\r\n};\r\nconst span = {\r\n    color: 'red'\r\n};\r\n\r\n\r\nconst Voice = props => {\r\n    const { register, handleSubmit, watch, errors } = useForm();\r\n    const onSubmit = data => voice(data);\r\n    const history = useHistory()\r\n\r\n    const voice = async (e) => {\r\n        const Data = new FormData();\r\n        console.log(e.audios1[0])\r\n        if (e.audios1[0] != null || undefined) {\r\n            Data.append('audios', e.audios1[0])\r\n        }\r\n        if (e.audios2[0] != null || undefined) {\r\n            Data.append('audios', e.audios2[0])\r\n        }\r\n        if (e.audios3[0] != null || undefined) {\r\n            Data.append('audios', e.audios3[0])\r\n        }\r\n\r\n\r\n        if (e.audios1[0] != null || undefined) {\r\n            Data.append('text[]', e.text1)\r\n        }\r\n        if (e.audios2[0] != null || undefined) {\r\n            Data.append('text[]', e.text2)\r\n        }\r\n        if (e.audios3[0] != null || undefined) {\r\n            Data.append('text[]', e.text3)\r\n        }\r\n        Data.append('name', e.name)\r\n\r\n        const data = await axios.post('http://52.221.81.214:4556/api/v1/voice/register', Data, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            },\r\n        })\r\n        console.log(data)\r\n\r\n        history.push('/voice')\r\n        Swal.fire(\r\n            'Thành công',\r\n            'You clicked the button!',\r\n            'success'\r\n        )\r\n    }\r\n    return (\r\n        <div className=\"container\">\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n                <h1 className=\"text-success\">Register Voice</h1>\r\n                <div className=\"row\">\r\n                    <div className=\"col-6\">\r\n                        <div className=\"mb-3\" style={mb}>\r\n                            <label style={label} htmlFor=\"formFile\" className=\"form-label\">Giọng nói<span style={span}>*</span></label>\r\n                            <input name='audios1' ref={register({ required: true })} className=\"form-control\" type=\"file\" accept=\"audio\" id=\"formFile\" />\r\n                            <small className=\"form-text text-danger\">\r\n                                {errors.name && errors.name.type === \"required\" && <span>Vui lòng không để trống</span>}\r\n                            </small>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n                        <div className=\"mb-3\" style={mb}>\r\n                            <label style={label} htmlFor=\"exampleInputEmail1\" className=\"form-label\">Nội dung<span style={span}>*</span></label>\r\n                            <input name='text1' ref={register({ required: true, minLength: 3 })} className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" />\r\n                            <small className=\"form-text text-danger\">\r\n                                {errors.name && errors.name.type === \"required\" && <span>Vui lòng không để trống</span>}\r\n                                {errors.name && errors.name.type === \"minLength\" && <span>Tên phải lớn hơn hoặc bằng 3 ký tự</span>}\r\n                            </small>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-6\">\r\n                        <div className=\"mb-3\" style={mb}>\r\n                            <label style={label} htmlFor=\"formFile\" className=\"form-label\">Giọng nói<span style={span}>*</span></label>\r\n                            <input name='audios2' ref={register({ required: true })} className=\"form-control\" type=\"file\" accept=\"audio\" id=\"formFile\" />\r\n                            <small className=\"form-text text-danger\">\r\n                                {errors.name && errors.name.type === \"required\" && <span>Vui lòng không để trống</span>}\r\n                            </small>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n                        <div className=\"mb-3\" style={mb}>\r\n                            <label style={label} htmlFor=\"exampleInputEmail1\" className=\"form-label\">Nội dung<span style={span}>*</span></label>\r\n                            <input name='text2' ref={register({ required: true, minLength: 3 })} className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" />\r\n                            <small className=\"form-text text-danger\">\r\n                                {errors.name && errors.name.type === \"required\" && <span>Vui lòng không để trống</span>}\r\n                                {errors.name && errors.name.type === \"minLength\" && <span>Tên phải lớn hơn hoặc bằng 3 ký tự</span>}\r\n                            </small>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-6\">\r\n                        <div className=\"mb-3\" style={mb}>\r\n                            <label style={label} htmlFor=\"formFile\" className=\"form-label\">Giọng nói<span style={span}>*</span></label>\r\n                            <input name='audios3' ref={register({ required: true })} className=\"form-control\" type=\"file\" accept=\"audio\" id=\"formFile\" />\r\n                            <small className=\"form-text text-danger\">\r\n                                {errors.name && errors.name.type === \"required\" && <span>Vui lòng không để trống</span>}\r\n                            </small>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n                        <div className=\"mb-3\" style={mb}>\r\n                            <label style={label} htmlFor=\"exampleInputEmail1\" className=\"form-label\">Nội dung<span style={span}>*</span></label>\r\n                            <input name='text3' ref={register({ required: true, minLength: 3 })} className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" />\r\n                            <small className=\"form-text text-danger\">\r\n                                {errors.name && errors.name.type === \"required\" && <span>Vui lòng không để trống</span>}\r\n                                {errors.name && errors.name.type === \"minLength\" && <span>Tên phải lớn hơn hoặc bằng 3 ký tự</span>}\r\n                            </small>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"mb-3\" style={mb}>\r\n                    <label style={label} htmlFor=\"exampleInputEmail1\" className=\"form-label\">Họ tên<span style={span}>*</span></label>\r\n                    <input name='name' ref={register({ required: true, minLength: 3 })} className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" />\r\n                    <small className=\"form-text text-danger\">\r\n                        {errors.name && errors.name.type === \"required\" && <span>Vui lòng không để trống</span>}\r\n                        {errors.name && errors.name.type === \"minLength\" && <span>Tên phải lớn hơn hoặc bằng 3 ký tự</span>}\r\n                    </small>\r\n                </div>\r\n\r\n\r\n                <button style={button} type=\"submit\" className=\"btn btn-success\">Submit</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nVoice.propTypes = {\r\n\r\n}\r\n\r\nexport default Voice\r\n","C:\\Users\\DELL G3\\Desktop\\FSOFT\\Reactjs\\fsoft-test33\\src\\component\\Check\\index.js",["123","124","125","126"],"import React, { useState } from 'react'\r\nimport axios from 'axios'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useForm } from 'react-hook-form'\r\nimport Swal from 'sweetalert2'\r\n\r\n\r\n\r\nconst mb = {\r\n    width: '500px',\r\n    margin: 'auto'\r\n};\r\nconst button = {\r\n    margin: 'auto',\r\n    marginTop: \"125px\"\r\n};\r\nconst table = {\r\n    width: \"900px\",\r\n    margin: \"auto\",\r\n    position: \"relative\",\r\n    top: \"100px\"\r\n};\r\n\r\nconst Check = props => {\r\n    const history = useHistory()\r\n    const { register, handleSubmit, watch, errors } = useForm();\r\n    const users = [];\r\n    const [checkData, setData] = useState(users)\r\n    const [picture, setPicture] = useState(null);\r\n    const [imgData, setImgData] = useState(null);\r\n    const onSubmit = dataCheck => addCheck(dataCheck);\r\n\r\n    const addCheck = async (e) => {\r\n        const Data = new FormData();\r\n        Data.append('image', e.image[0]);\r\n        console.log(Data)\r\n        const dataCheck = await axios.post('https://facedemo-api.dev.trandata.io/api/v1/facedemo/recognition', Data, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            },\r\n        })\r\n        const res = dataCheck.data;\r\n        console.log(res)\r\n\r\n        if (res.ErrorCode === 0) {\r\n            const data = res.Data;\r\n            setData(data);\r\n            console.log(data);\r\n\r\n        } else {\r\n            history.push('/check')\r\n            Swal.fire(\r\n                'Hinh anh khong chinh xac',\r\n                'You clicked the button!',\r\n                'error'\r\n            )\r\n        }\r\n        console.log(dataCheck)\r\n    }\r\n\r\n\r\n    //upload file ảnh\r\n    const onChangePicture = e => {\r\n        if (e.target.files[0]) {\r\n            console.log(\"picture: \", e.target.files);\r\n            setPicture(e.target.files[0]);\r\n\r\n            const reader = new FileReader();\r\n            reader.addEventListener(\"load\", () => {\r\n                setImgData(reader.result);\r\n            });\r\n            reader.readAsDataURL(e.target.files[0]);\r\n\r\n\r\n        }\r\n    }\r\n\r\n\r\n    // canvas\r\n    // var imagePaper = new Image();\r\n    // imagePaper.onload = function () {\r\n    //     context.drawImage(imagePaper, 100, 20, 500, 500);\r\n    // };\r\n    // imagePaper.src = \"\";\r\n\r\n    window.onload = function () {\r\n        var c = document.getElementById(\"myCanvas\");\r\n        var ctx = c.getContext(\"2d\");\r\n        var img = document.getElementById(\"scream\");\r\n        ctx.drawImage(img, 20, 10);\r\n        var canvas = document.getElementById('myCanvas');\r\n        var context = canvas.getContext('2d');\r\n\r\n        context.beginPath();\r\n        context.rect(35, 40, 130, 100);\r\n        // context.fillStyle = \"hsl(0, 0%, 100%)\";\r\n        // context.fill();\r\n        context.lineWidth = 1;\r\n        context.strokeStyle = 'black';\r\n        context.stroke();\r\n        context.restore();\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h1 className=\"text-success\">Recognize</h1>\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n                <div className=\"mb-3\" style={mb}>\r\n\r\n                    <label htmlFor=\"formFile\" className=\"form-label\">Hình ảnh</label>\r\n                    <input ref=\"window\" onChange={onChangePicture} name='image' ref={register({ required: true })} className=\"form-control\" type=\"file\" id=\"formFile\" />\r\n                    <div className=\"previewProfilePic\" style={{ marginLeft: \"90px\" }}>\r\n                        <img id=\"scream\" className=\"playerProfilePic_home_tile\" style={{ marginTop: '18px', objectFit: 'cover', zIndex: '1', position: 'absolute' }} width={200} height={260} src={imgData} />\r\n                        <canvas id=\"myCanvas\" style={{ position: 'relative', top: '30px', zIndex: '20' }} />\r\n                    </div>\r\n\r\n                    <small className=\"form-text text-danger\">\r\n                        {errors.name && errors.name.type === \"required\" && <span>Vui lòng không để trống</span>}\r\n                    </small>\r\n                </div>\r\n\r\n                <button style={button} type=\"submit\" className=\"btn btn-success\">Submit</button>\r\n            </form>\r\n            <table style={table} className=\"table\">\r\n                <thead style={{ 'background-color': '#28a745', color: 'white' }} >\r\n                    <tr>\r\n\r\n                        <th scope=\"col\">Tên</th>\r\n                        <th scope=\"col\">Similarity</th>\r\n\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        <tr >\r\n\r\n                            <td>{checkData.name}</td>\r\n                            <td>{checkData.similarity}</td>\r\n\r\n                        </tr>\r\n\r\n                    }\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\nexport default Check\r\n","C:\\Users\\DELL G3\\Desktop\\FSOFT\\Reactjs\\fsoft-test33\\src\\component\\Report\\index.js",["127","128","129","130","131","132"],"import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport { useForm } from 'react-hook-form'\r\nimport { useHistory } from 'react-router-dom'\r\nimport * as FileSaver from 'file-saver';\r\nimport * as XLSX from 'xlsx';\r\n\r\nconst form = {\r\n    marginLeft: \"25px\",\r\n\r\n\r\n};\r\nconst h1 = {\r\n    \"text-align\": \"center\",\r\n    \"padding-top\": \"50px\"\r\n};\r\nconst align = {\r\n    position: \"relative\",\r\n    top: \"50px\",\r\n    left: \"85px\"\r\n};\r\nconst col = {\r\n    \"margin-top\": \"8px\",\r\n    position: \"relative\",\r\n    left: \"300px\",\r\n    top: \"-82px\"\r\n};\r\nconst table = {\r\n    width: \"900px\",\r\n    margin: \"auto\",\r\n    position: \"relative\",\r\n    top: \"100px\"\r\n};\r\nconst input = {\r\n    width: \"200px\",\r\n    position: \"relative\",\r\n}\r\nconst label = {\r\n    float: \"left\"\r\n}\r\n\r\n\r\n\r\nconst Report = props => {\r\n    const { register, handleSubmit, watch, errors } = useForm();\r\n    const users = [];\r\n    const [reportData, setData] = useState(users)\r\n    const onSubmit = data => search(data)\r\n\r\n    // const onSubmit = valueFrom => console.log(valueFrom);\r\n    const history = useHistory()\r\n    // useEffect(() => {\r\n    //     const getReport = async () => {\r\n    //         try {\r\n    //             const dataPayload = {\r\n    //                 from: 0,\r\n    //                 to: 0\r\n    //             }\r\n    //             const data = await axios.post('https://ekyc-demo-api.trandata.io/api/v1/user/verifyHistory', dataPayload, {\r\n    //                 headers: {\r\n    //                     'Content-Type': 'application/json'\r\n    //                 },\r\n    //             })\r\n    //             // console.log(data.data.Data);\r\n    //             setData(data.data.Data)\r\n    //             // console.log(reportData);\r\n    //         } catch (error) {\r\n    //         }\r\n    //     }\r\n    //     getReport();\r\n    // }, []);\r\n\r\n    const dataExport = [];\r\n    const search = async (e) => {\r\n        console.log(e);\r\n        const dateFrom = new Date(e.from);\r\n        const dateTo = new Date(e.to);\r\n        const unixFrom = dateFrom.getTime() / 1000;\r\n        const unixTo = dateTo.getTime() / 1000;\r\n        console.log('key');\r\n        console.log(unixFrom, unixTo);\r\n        const dataPayload = {\r\n            from: unixFrom,\r\n            to: unixTo + 86400\r\n        }\r\n        const token = e.key;\r\n        const data = await axios.post('https://ekyc-demo-api.trandata.io/api/v1/user/verifyHistory', dataPayload, {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'apiKey': token\r\n            },\r\n        })\r\n\r\n        // exportToCSV(data.data.Data, 'test nhe');\r\n        // console.log(dataExport);\r\n        setData(data.data.Data)\r\n    }\r\n\r\n    const exportToCSV = (dataExport) => {\r\n        console.log(dataExport);\r\n        const fileType = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\r\n        const fileExtension = '.xlsx';\r\n        const dateNow = new Date();\r\n\r\n        //create fileName\r\n        const dateFile = dateNow.getTime();\r\n        const fileName = 'Report-' + dateFile;\r\n\r\n        //biến đổi data theo đúng yêu cầu\r\n        const custs = [];\r\n        for (let i = 0; i < dataExport.length; i++) {\r\n            const element = dataExport[i];\r\n            custs.push({\r\n                'SST': i + 1,\r\n                'Mã': element.idNumber,\r\n                'Tên': element.name,\r\n                'Ngày': element.createdDate,\r\n                'Giờ': element.createdTime,\r\n                'So sánh': element.idMatched,\r\n                'Xác nhận': element.confirm\r\n\r\n            });\r\n        }\r\n\r\n\r\n\r\n        //Create File\r\n        const ws = XLSX.utils.json_to_sheet(custs);\r\n        const wb = { Sheets: { 'data': ws }, SheetNames: ['data'] };\r\n        const excelBuffer = XLSX.write(wb, { bookType: 'xlsx', type: 'array' });\r\n        const data = new Blob([excelBuffer], { type: fileType });\r\n        FileSaver.saveAs(data, fileName + fileExtension);\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <form style={form} onSubmit={handleSubmit(onSubmit)}>\r\n                <h1 style={h1} className=\"text-dark\">Report</h1>\r\n                <div style={align} className=\"form-row align-items-center\">\r\n\r\n                    <div className=\"\" style={{ 'width': '900px', marginTop: '20px', 'display': 'flex', 'alignItems': 'flex-end', 'justifyContent': 'space-around' }}>\r\n\r\n                        <div className=\"form-group\" style={{ textAlign: 'left' }}>\r\n                            <label htmlFor=\"formFile\">Authen Key</label>\r\n                            <input name='key' type=\"text\" className=\"form-control\" ref={register} />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\" style={{ textAlign: 'left' }}>\r\n                            <label htmlFor=\"formFile\">Form date</label>\r\n                            <input name='from' style={input} type=\"date\" className=\"form-control\" ref={register} />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\" style={{ textAlign: 'left' }}>\r\n                            <label htmlFor=\"formFile\">To date</label>\r\n                            <input name='to' style={input} type=\"date\" className=\"form-control\" ref={register} />\r\n                        </div>\r\n                        <button type=\"submit\" className=\"btn btn-dark mb-3\">Search</button>\r\n\r\n                        <button type=\"button\" onClick={() => exportToCSV(reportData)} className=\"btn btn-dark mb-3\">Export</button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n\r\n            <table style={table} className=\"table\">\r\n                <thead style={{ 'background-color': 'black', color: 'white' }} className=\"thead-dark\">\r\n                    <tr>\r\n                        <th scope=\"col\">ID</th>\r\n                        <th scope=\"col\">Mã</th>\r\n                        <th scope=\"col\">Tên</th>\r\n                        <th scope=\"col\">Ngày</th>\r\n                        <th scope=\"col\">Giờ</th>\r\n                        <th scope=\"col\">So sánh</th>\r\n                        <th scope=\"col\">Xác nhận</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        reportData.map((el, index) => (\r\n                            <tr key={index}>\r\n                                <th scope=\"row\">{el.id}</th>\r\n                                <td>{el.idNumber}</td>\r\n                                <td>{el.name}</td>\r\n                                <td>{el.createdDate}</td>\r\n                                <td>{el.createdTime}</td>\r\n                                <td>{el.idMatched}</td>\r\n                                <td>{el.confirm}</td>\r\n                            </tr>\r\n                        ))\r\n                    }\r\n\r\n\r\n                </tbody>\r\n            </table>\r\n        </div >\r\n\r\n    )\r\n}\r\n\r\nReport.propTypes = {\r\n\r\n}\r\n\r\nexport default Report\r\n","C:\\Users\\DELL G3\\Desktop\\FSOFT\\Reactjs\\fsoft-test33\\src\\component\\CheckVoice\\index.js",["133"],"import React, { useState } from 'react'\r\nimport axios from 'axios'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useForm } from 'react-hook-form'\r\nimport Swal from 'sweetalert2'\r\n\r\nconst mb = {\r\n    width: '500px',\r\n    margin: 'auto'\r\n};\r\nconst label = {\r\n    float: 'left'\r\n};\r\nconst button = {\r\n    margin: 'auto',\r\n};\r\nconst table = {\r\n    width: \"900px\",\r\n    margin: \"auto\",\r\n    position: \"relative\",\r\n    top: \"100px\"\r\n};\r\n\r\nconst CheckVoice = props => {\r\n    const history = useHistory()\r\n    const { register, handleSubmit, watch, errors } = useForm();\r\n    const users = [];\r\n    const [checkData, setData] = useState(users)\r\n    const onSubmit = dataCheck => Check(dataCheck);\r\n\r\n    const makeId = (length) => {\r\n        var result = '';\r\n        var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n        var charactersLength = characters.length;\r\n        for (var i = 0; i < length; i++) {\r\n            result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n        }\r\n        return result;\r\n    }\r\n\r\n    const Check = async (e) => {\r\n        const Data = new FormData();\r\n        Data.append('requestId', makeId(16));\r\n        Data.append('audious', e.audious1[0]);\r\n        // console.log(Data)\r\n        const dataCheck = await axios.post('http://52.221.81.214:4556/api/v1/voice/identify', Data, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            },\r\n        })\r\n\r\n        const res = dataCheck.data;\r\n        if (res.ErrorCode === 0) {\r\n            const data = res.Data;\r\n            setData(data.ls_audio[0].result);\r\n            console.log(data);\r\n        }\r\n        else {\r\n            history.push('/checkvoice')\r\n            Swal.fire(\r\n                'Giong noi khong chinh xac',\r\n                'You clicked the button!',\r\n                'error'\r\n            )\r\n        }\r\n    }\r\n    return (\r\n        <div className='container'>\r\n            <h1 style={{ paddingBottom: '50px' }} className=\"text-success\">Recognize Voice</h1>\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n                <div className=\"mb-3\" style={mb}>\r\n                    <label style={label} htmlFor=\"formFile\" className=\"form-label\">Giọng nói</label>\r\n                    <input name='audious1' ref={register({ required: true })} className=\"form-control\" type=\"file\" id=\"formFile\" />\r\n                    <small className=\"form-text text-danger\">\r\n                        {errors.name && errors.name.type === \"required\" && <span>Vui lòng không để trống</span>}\r\n                    </small>\r\n                </div>\r\n                <button style={button} type=\"submit\" className=\"btn btn-success\">Submit</button>\r\n            </form>\r\n\r\n            <table style={table} className=\"table\">\r\n                <thead style={{ 'background-color': '#28a745', color: 'white' }} >\r\n                    <tr>\r\n                        <th scope=\"col\">ID</th>\r\n                        <th scope=\"col\">Tên</th>\r\n                        <th scope=\"col\">Score</th>\r\n\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        checkData.map((el, index) => (\r\n                            <tr key={index}>\r\n                                <th scope=\"row\">{el.speaker_id}</th>\r\n                                <td>{el.name}</td>\r\n                                <td>{el.score}</td>\r\n\r\n                            </tr>\r\n                        ))\r\n                    }\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nCheckVoice.propTypes = {\r\n\r\n}\r\n\r\nexport default CheckVoice\r\n","C:\\Users\\DELL G3\\Desktop\\FSOFT\\Reactjs\\fsoft-test33\\src\\component\\RecognizeHistory\\index.js",["134","135","136","137","138"],{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","severity":1,"message":"144","line":2,"column":50,"nodeType":"145","messageId":"146","endLine":2,"endColumn":54},{"ruleId":"143","severity":1,"message":"147","line":27,"column":37,"nodeType":"145","messageId":"146","endLine":27,"endColumn":42},{"ruleId":"143","severity":1,"message":"147","line":27,"column":37,"nodeType":"145","messageId":"146","endLine":27,"endColumn":42},{"ruleId":"148","severity":1,"message":"149","line":44,"column":60,"nodeType":"150","messageId":"151","endLine":44,"endColumn":61},{"ruleId":"143","severity":1,"message":"144","line":2,"column":50,"nodeType":"145","messageId":"146","endLine":2,"endColumn":54},{"ruleId":"143","severity":1,"message":"152","line":1,"column":17,"nodeType":"145","messageId":"146","endLine":1,"endColumn":26},{"ruleId":"143","severity":1,"message":"153","line":22,"column":7,"nodeType":"145","messageId":"146","endLine":22,"endColumn":10},{"ruleId":"143","severity":1,"message":"147","line":45,"column":37,"nodeType":"145","messageId":"146","endLine":45,"endColumn":42},{"ruleId":"143","severity":1,"message":"154","line":45,"column":44,"nodeType":"145","messageId":"146","endLine":45,"endColumn":50},{"ruleId":"143","severity":1,"message":"155","line":51,"column":11,"nodeType":"145","messageId":"146","endLine":51,"endColumn":18},{"ruleId":"143","severity":1,"message":"156","line":73,"column":11,"nodeType":"145","messageId":"146","endLine":73,"endColumn":21},{"ruleId":"143","severity":1,"message":"147","line":28,"column":37,"nodeType":"145","messageId":"146","endLine":28,"endColumn":42},{"ruleId":"143","severity":1,"message":"147","line":34,"column":37,"nodeType":"145","messageId":"146","endLine":34,"endColumn":42},{"ruleId":"143","severity":1,"message":"157","line":36,"column":12,"nodeType":"145","messageId":"146","endLine":36,"endColumn":22},{"ruleId":"143","severity":1,"message":"158","line":36,"column":24,"nodeType":"145","messageId":"146","endLine":36,"endColumn":31},{"ruleId":"139","replacedBy":"159"},{"ruleId":"141","replacedBy":"160"},{"ruleId":"143","severity":1,"message":"144","line":2,"column":50,"nodeType":"145","messageId":"146","endLine":2,"endColumn":54},{"ruleId":"143","severity":1,"message":"161","line":3,"column":8,"nodeType":"145","messageId":"146","endLine":3,"endColumn":16},{"ruleId":"143","severity":1,"message":"162","line":4,"column":8,"nodeType":"145","messageId":"146","endLine":4,"endColumn":13},{"ruleId":"143","severity":1,"message":"163","line":5,"column":8,"nodeType":"145","messageId":"146","endLine":5,"endColumn":14},{"ruleId":"143","severity":1,"message":"164","line":7,"column":8,"nodeType":"145","messageId":"146","endLine":7,"endColumn":13},{"ruleId":"143","severity":1,"message":"165","line":8,"column":8,"nodeType":"145","messageId":"146","endLine":8,"endColumn":18},{"ruleId":"143","severity":1,"message":"147","line":28,"column":37,"nodeType":"145","messageId":"146","endLine":28,"endColumn":42},{"ruleId":"143","severity":1,"message":"147","line":28,"column":37,"nodeType":"145","messageId":"146","endLine":28,"endColumn":42},{"ruleId":"143","severity":1,"message":"147","line":26,"column":37,"nodeType":"145","messageId":"146","endLine":26,"endColumn":42},{"ruleId":"143","severity":1,"message":"166","line":29,"column":12,"nodeType":"145","messageId":"146","endLine":29,"endColumn":19},{"ruleId":"167","severity":1,"message":"168","line":111,"column":81,"nodeType":"169","endLine":111,"endColumn":115},{"ruleId":"170","severity":1,"message":"171","line":113,"column":25,"nodeType":"172","endLine":113,"endColumn":207},{"ruleId":"143","severity":1,"message":"152","line":1,"column":17,"nodeType":"145","messageId":"146","endLine":1,"endColumn":26},{"ruleId":"143","severity":1,"message":"153","line":22,"column":7,"nodeType":"145","messageId":"146","endLine":22,"endColumn":10},{"ruleId":"143","severity":1,"message":"147","line":45,"column":37,"nodeType":"145","messageId":"146","endLine":45,"endColumn":42},{"ruleId":"143","severity":1,"message":"154","line":45,"column":44,"nodeType":"145","messageId":"146","endLine":45,"endColumn":50},{"ruleId":"143","severity":1,"message":"155","line":51,"column":11,"nodeType":"145","messageId":"146","endLine":51,"endColumn":18},{"ruleId":"143","severity":1,"message":"156","line":73,"column":11,"nodeType":"145","messageId":"146","endLine":73,"endColumn":21},{"ruleId":"143","severity":1,"message":"147","line":26,"column":37,"nodeType":"145","messageId":"146","endLine":26,"endColumn":42},{"ruleId":"143","severity":1,"message":"173","line":4,"column":10,"nodeType":"145","messageId":"146","endLine":4,"endColumn":20},{"ruleId":"143","severity":1,"message":"153","line":20,"column":7,"nodeType":"145","messageId":"146","endLine":20,"endColumn":10},{"ruleId":"143","severity":1,"message":"147","line":40,"column":37,"nodeType":"145","messageId":"146","endLine":40,"endColumn":42},{"ruleId":"143","severity":1,"message":"154","line":40,"column":44,"nodeType":"145","messageId":"146","endLine":40,"endColumn":50},{"ruleId":"143","severity":1,"message":"156","line":47,"column":11,"nodeType":"145","messageId":"146","endLine":47,"endColumn":21},"no-native-reassign",["174"],"no-negated-in-lhs",["175"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'watch' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'useEffect' is defined but never used.","'col' is assigned a value but never used.","'errors' is assigned a value but never used.","'history' is assigned a value but never used.","'dataExport' is assigned a value but never used.","'reportData' is assigned a value but never used.","'setData' is assigned a value but never used.",["174"],["175"],"'Register' is defined but never used.","'Check' is defined but never used.","'Report' is defined but never used.","'Voice' is defined but never used.","'CheckVoice' is defined but never used.","'picture' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useHistory' is defined but never used.","no-global-assign","no-unsafe-negation"]