[{"C:\\Users\\DELL G3\\Desktop\\FSOFT\\test1\\react-project\\src\\index.js":"1","C:\\Users\\DELL G3\\Desktop\\FSOFT\\test1\\react-project\\src\\reportWebVitals.js":"2","C:\\Users\\DELL G3\\Desktop\\FSOFT\\test1\\react-project\\src\\App.js":"3","C:\\Users\\DELL G3\\Desktop\\FSOFT\\test1\\react-project\\src\\routers\\Index.js":"4","C:\\Users\\DELL G3\\Desktop\\FSOFT\\test1\\react-project\\src\\component\\Register\\index.js":"5","C:\\Users\\DELL G3\\Desktop\\FSOFT\\test1\\react-project\\src\\component\\Check\\index.js":"6","C:\\Users\\DELL G3\\Desktop\\FSOFT\\test1\\react-project\\src\\routers\\index.js":"7","C:\\Users\\DELL G3\\Desktop\\FSOFT\\test1\\react-project\\src\\component\\Report\\index.js":"8","C:\\Users\\DELL G3\\Desktop\\FSOFT\\test1\\react-project\\src\\component\\Voice\\index.js":"9","C:\\Users\\DELL G3\\Desktop\\FSOFT\\test1\\react-project\\src\\component\\CheckVoice\\index.js":"10","C:\\Users\\DELL G3\\Desktop\\FSOFT\\Reactjs\\fsoft-test33\\src\\index.js":"11","C:\\Users\\DELL G3\\Desktop\\FSOFT\\Reactjs\\fsoft-test33\\src\\reportWebVitals.js":"12","C:\\Users\\DELL G3\\Desktop\\FSOFT\\Reactjs\\fsoft-test33\\src\\App.js":"13","C:\\Users\\DELL G3\\Desktop\\FSOFT\\Reactjs\\fsoft-test33\\src\\routers\\index.js":"14","C:\\Users\\DELL G3\\Desktop\\FSOFT\\Reactjs\\fsoft-test33\\src\\component\\Register\\index.js":"15","C:\\Users\\DELL G3\\Desktop\\FSOFT\\Reactjs\\fsoft-test33\\src\\component\\Voice\\index.js":"16","C:\\Users\\DELL G3\\Desktop\\FSOFT\\Reactjs\\fsoft-test33\\src\\component\\Check\\index.js":"17","C:\\Users\\DELL G3\\Desktop\\FSOFT\\Reactjs\\fsoft-test33\\src\\component\\CheckVoice\\index.js":"18","C:\\Users\\DELL G3\\Desktop\\FSOFT\\Reactjs\\fsoft-test33\\src\\component\\RecognizeHistory\\index.js":"19","C:\\Users\\DELL G3\\Desktop\\FSOFT\\Reactjs\\fsoft-test33\\src\\component\\VerifyHistory\\index.js":"20","C:\\Users\\DELL G3\\Desktop\\FSOFT\\Reactjs\\fsoft-test33\\src\\component\\LayoutHistory\\index.js":"21"},{"size":500,"mtime":499162500000,"results":"22","hashOfConfig":"23"},{"size":362,"mtime":499162500000,"results":"24","hashOfConfig":"23"},{"size":195,"mtime":1608109639841,"results":"25","hashOfConfig":"23"},{"size":642,"mtime":1608005079805,"results":"26","hashOfConfig":"27"},{"size":4958,"mtime":1609749968792,"results":"28","hashOfConfig":"23"},{"size":2342,"mtime":1609835173886,"results":"29","hashOfConfig":"23"},{"size":1121,"mtime":1610010503374,"results":"30","hashOfConfig":"23"},{"size":7050,"mtime":1610010416230,"results":"31","hashOfConfig":"23"},{"size":7875,"mtime":1609836497408,"results":"32","hashOfConfig":"23"},{"size":3526,"mtime":1610005981112,"results":"33","hashOfConfig":"23"},{"size":500,"mtime":499162500000,"results":"34","hashOfConfig":"35"},{"size":362,"mtime":499162500000,"results":"36","hashOfConfig":"35"},{"size":195,"mtime":1608109639841,"results":"37","hashOfConfig":"35"},{"size":1430,"mtime":1611026284830,"results":"38","hashOfConfig":"35"},{"size":3610,"mtime":1611025001907,"results":"39","hashOfConfig":"35"},{"size":7866,"mtime":1610445434548,"results":"40","hashOfConfig":"35"},{"size":5230,"mtime":1611047242054,"results":"41","hashOfConfig":"35"},{"size":3688,"mtime":1610508195316,"results":"42","hashOfConfig":"35"},{"size":6249,"mtime":1610525158753,"results":"43","hashOfConfig":"35"},{"size":7025,"mtime":1610610920041,"results":"44","hashOfConfig":"35"},{"size":1517,"mtime":1611045971856,"results":"45","hashOfConfig":"35"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"10gkjkq",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"pcvygj",{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"48"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},"df9924",{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"73"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"73"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"73"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\DELL G3\\Desktop\\FSOFT\\test1\\react-project\\src\\index.js",[],["97","98"],"C:\\Users\\DELL G3\\Desktop\\FSOFT\\test1\\react-project\\src\\reportWebVitals.js",[],"C:\\Users\\DELL G3\\Desktop\\FSOFT\\test1\\react-project\\src\\App.js",[],"C:\\Users\\DELL G3\\Desktop\\FSOFT\\test1\\react-project\\src\\routers\\Index.js",["99"],"C:\\Users\\DELL G3\\Desktop\\FSOFT\\test1\\react-project\\src\\component\\Register\\index.js",["100"],"import React from 'react'\r\nimport axios from 'axios'\r\nimport { useForm } from 'react-hook-form'\r\nimport { useHistory } from 'react-router-dom'\r\nimport Swal from 'sweetalert2'\r\nconst form = {\r\n    padding: '30px',\r\n    position: 'relative',\r\n    left: '380px'\r\n};\r\nconst mb = {\r\n    width: '500px'\r\n};\r\nconst label = {\r\n    float: 'left'\r\n};\r\nconst button = {\r\n    float: 'left',\r\n    position: 'relative',\r\n    top: '20px'\r\n};\r\nconst span = {\r\n    color: 'red'\r\n};\r\n\r\nconst Register = props => {\r\n    const { register, handleSubmit, watch, errors } = useForm();\r\n    const onSubmit = data => addRegister(data);\r\n    const history = useHistory()\r\n\r\n    const addRegister = async (e) => {\r\n        const Data = new FormData();\r\n        console.log(e.images1[0])\r\n        Data.append('id', 64646);\r\n        Data.append('image1', e.images1[0]);\r\n        Data.append('image2', e.images2[0]);\r\n        Data.append('image3', e.images3[0]);\r\n        Data.append('name', e.name);\r\n        Data.append('dob', e.dob);\r\n        console.log(Data)\r\n        const data = await axios.post('http://52.221.58.53:2020/api/register', Data, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            },\r\n        })\r\n        console.log(data)\r\n\r\n        history.push('/register')\r\n        Swal.fire(\r\n            'Thành công',\r\n            'You clicked the button!',\r\n            'success'\r\n        )\r\n    }\r\n    return (\r\n        <div className=\"container\">\r\n\r\n            <form style={form} onSubmit={handleSubmit(onSubmit)}>``\r\n                <h1 style={{ position: 'relative', left: '-370px' }} className=\"text-success\">Register</h1>\r\n                <div className=\"mb-3\" style={mb}>\r\n                    <label style={label} htmlFor=\"formFile\" className=\"form-label\">Hình ảnh<span style={span}>*</span></label>\r\n                    <input name='images1' ref={register({ required: true })} className=\"form-control\" type=\"file\" id=\"formFile\" />\r\n                    <small className=\"form-text text-danger\">\r\n                        {errors.name && errors.name.type === \"required\" && <span>Vui lòng không để trống</span>}\r\n                    </small>\r\n                </div>\r\n\r\n                <div className=\"mb-3\" style={mb}>\r\n                    <label style={label} htmlFor=\"formFile\" className=\"form-label\">Hình ảnh<span style={span}>*</span></label>\r\n                    <input name='images2' ref={register({ required: true })} className=\"form-control\" type=\"file\" id=\"formFile\" />\r\n                    <small className=\"form-text text-danger\">\r\n                        {errors.name && errors.name.type === \"required\" && <span>Vui lòng không để trống</span>}\r\n                    </small>\r\n                </div>\r\n\r\n                <div className=\"mb-3\" style={mb}>\r\n                    <label style={label} htmlFor=\"formFile\" className=\"form-label\">Hình ảnh<span style={span}>*</span></label>\r\n                    <input name='images3' ref={register({ required: true })} className=\"form-control\" type=\"file\" id=\"formFile\" />\r\n                    <small className=\"form-text text-danger\">\r\n                        {errors.name && errors.name.type === \"required\" && <span>Vui lòng không để trống</span>}\r\n                    </small>\r\n                </div>\r\n\r\n                <div className=\"mb-3\" style={mb}>\r\n                    <label style={label} htmlFor=\"exampleInputEmail1\" className=\"form-label\">Họ tên<span style={span}>*</span></label>\r\n                    <input name='name' ref={register({ required: true, minLength: 3 })} className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" />\r\n                    <small className=\"form-text text-danger\">\r\n                        {errors.name && errors.name.type === \"required\" && <span>Vui lòng không để trống</span>}\r\n                        {errors.name && errors.name.type === \"minLength\" && <span>Tên phải lớn hơn hoặc bằng 3 ký tự</span>}\r\n                    </small>\r\n                </div>\r\n\r\n                <div className=\"mb-3\" style={mb}>\r\n                    <label style={label} htmlFor=\"exampleInputPassword1\" className=\"form-label\">Ngày sinh<span style={span}>*</span></label>\r\n                    <input name='dob' type='date' ref={register({ required: true, minLength: 3 })} className=\"form-control\" />\r\n                    <small className=\"form-text text-danger\">\r\n                        {errors.name && errors.name.type === \"required\" && <span>Vui lòng không để trống</span>}\r\n                        {errors.name && errors.name.type === \"minLength\" && <span>Tên phải lớn hơn hoặc bằng 3 ký tự</span>}\r\n                    </small>\r\n                </div>\r\n\r\n                <button style={button} type=\"submit\" className=\"btn btn-success\">Submit</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nRegister.propTypes = {\r\n}\r\n\r\nexport default Register\r\n","C:\\Users\\DELL G3\\Desktop\\FSOFT\\test1\\react-project\\src\\component\\Check\\index.js",["101","102"],"import React from 'react'\r\nimport axios from 'axios'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useForm } from 'react-hook-form'\r\nimport Swal from 'sweetalert2'\r\n\r\n\r\nconst form = {\r\n    padding: '30px',\r\n    position: 'relative',\r\n    left: '380px'\r\n};\r\nconst mb = {\r\n    width: '500px'\r\n};\r\nconst label = {\r\n    float: 'left'\r\n};\r\nconst button = {\r\n    position: 'relative',\r\n    left: '-370px',\r\n    top: '30px'\r\n};\r\n\r\nconst Check = props => {\r\n    const history = useHistory()\r\n    const { register, handleSubmit, watch, errors } = useForm();\r\n    const onSubmit = dataCheck => addCheck(dataCheck);\r\n\r\n    const addCheck = async (e) => {\r\n        const Data = new FormData();\r\n        Data.append('image1', e.images1[0]);\r\n        console.log(Data)\r\n        const dataCheck = await axios.post('http://52.221.58.53:2020/api/recognize', Data, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            },\r\n        })\r\n        const res = dataCheck.data;\r\n        if (res.status === 200) {\r\n            const data = res.data;\r\n            console.log(data);\r\n         \r\n            document.write('Ho ten:' + data.name + '<br/>' + 'Tuoi:' + data.dob);\r\n\r\n\r\n        } else {\r\n\r\n            history.push('/check')\r\n            Swal.fire(\r\n                'Hinh anh khong chinh xac',\r\n                'You clicked the button!',\r\n                'error'\r\n            )\r\n        }\r\n        console.log(dataCheck)\r\n\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h1 className=\"text-success\">Recognize</h1>\r\n            <form style={form} onSubmit={handleSubmit(onSubmit)}>\r\n                <div className=\"mb-3\" style={mb}>\r\n                    <label style={label} htmlFor=\"formFile\" className=\"form-label\">Hình ảnh</label>\r\n                    <input name='images1' ref={register({ required: true })} className=\"form-control\" type=\"file\" id=\"formFile\" />\r\n                    <small className=\"form-text text-danger\">\r\n                        {errors.name && errors.name.type === \"required\" && <span>Vui lòng không để trống</span>}\r\n                    </small>\r\n                </div>\r\n\r\n                <button style={button} type=\"submit\" className=\"btn btn-success\">Submit</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\nexport default Check\r\n","C:\\Users\\DELL G3\\Desktop\\FSOFT\\test1\\react-project\\src\\routers\\index.js",["103"],"C:\\Users\\DELL G3\\Desktop\\FSOFT\\test1\\react-project\\src\\component\\Report\\index.js",["104","105","106","107","108","109"],"C:\\Users\\DELL G3\\Desktop\\FSOFT\\test1\\react-project\\src\\component\\Voice\\index.js",["110"],"import React from 'react'\r\nimport axios from 'axios'\r\nimport { useForm } from 'react-hook-form'\r\nimport { useHistory } from 'react-router-dom'\r\nimport Swal from 'sweetalert2'\r\nconst form = {\r\n    padding: '100px',\r\n    position: 'relative',\r\n    left: '380px'\r\n};\r\nconst mb = {\r\n    width: '400px',\r\n    'margin-left': '120px',\r\n};\r\nconst label = {\r\n    float: 'left'\r\n};\r\nconst button = {\r\n    position: 'relative',\r\n    top: '20px'\r\n};\r\nconst span = {\r\n    color: 'red'\r\n};\r\n\r\n\r\nconst Voice = props => {\r\n    const { register, handleSubmit, watch, errors } = useForm();\r\n    const onSubmit = data => voice(data);\r\n    const history = useHistory()\r\n\r\n    const voice = async (e) => {\r\n        const Data = new FormData();\r\n        console.log(e.audios1[0])\r\n        if (e.audios1[0] != null || undefined) {\r\n            Data.append('audios', e.audios1[0])\r\n        }\r\n        if (e.audios2[0] != null || undefined) {\r\n            Data.append('audios', e.audios2[0])\r\n        }\r\n        if (e.audios3[0] != null || undefined) {\r\n            Data.append('audios', e.audios3[0])\r\n        }\r\n\r\n        if (e.audios1[0] != null || undefined) {\r\n            Data.append('text[]', e.text1)\r\n        }\r\n        if (e.audios2[0] != null || undefined) {\r\n            Data.append('text[]', e.text2)\r\n        }\r\n        if (e.audios3[0] != null || undefined) {\r\n            Data.append('text[]', e.text3)\r\n        }\r\n        Data.append('name', e.name)\r\n\r\n        const data = await axios.post('http://52.221.81.214:4556/api/v1/voice/register', Data, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            },\r\n        })\r\n        console.log(data)\r\n\r\n        history.push('/voice')\r\n        Swal.fire(\r\n            'Thành công',\r\n            'You clicked the button!',\r\n            'success'\r\n        )\r\n    }\r\n    return (\r\n        <div className=\"container\">\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n                <h1 style={{}} className=\"text-success\">Register Voice</h1>\r\n                <div className=\"row\">\r\n                    <div className=\"col-6\">\r\n                        <div className=\"mb-3\" style={mb}>\r\n                            <label style={label} htmlFor=\"formFile\" className=\"form-label\">Giọng nói<span style={span}>*</span></label>\r\n                            <input name='audios1' ref={register({ required: true })} className=\"form-control\" type=\"file\" accept=\"audio\" id=\"formFile\" />\r\n                            <small className=\"form-text text-danger\">\r\n                                {errors.name && errors.name.type === \"required\" && <span>Vui lòng không để trống</span>}\r\n                            </small>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n                        <div className=\"mb-3\" style={mb}>\r\n                            <label style={label} htmlFor=\"exampleInputEmail1\" className=\"form-label\">Nội dung<span style={span}>*</span></label>\r\n                            <input name='text1' ref={register({ required: true, minLength: 3 })} className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" />\r\n                            <small className=\"form-text text-danger\">\r\n                                {errors.name && errors.name.type === \"required\" && <span>Vui lòng không để trống</span>}\r\n                                {errors.name && errors.name.type === \"minLength\" && <span>Tên phải lớn hơn hoặc bằng 3 ký tự</span>}\r\n                            </small>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-6\">\r\n                        <div className=\"mb-3\" style={mb}>\r\n                            <label style={label} htmlFor=\"formFile\" className=\"form-label\">Giọng nói<span style={span}>*</span></label>\r\n                            <input name='audios2' ref={register({ required: true })} className=\"form-control\" type=\"file\" accept=\"audio\" id=\"formFile\" />\r\n                            <small className=\"form-text text-danger\">\r\n                                {errors.name && errors.name.type === \"required\" && <span>Vui lòng không để trống</span>}\r\n                            </small>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n                        <div className=\"mb-3\" style={mb}>\r\n                            <label style={label} htmlFor=\"exampleInputEmail1\" className=\"form-label\">Nội dung<span style={span}>*</span></label>\r\n                            <input name='text2' ref={register({ required: true, minLength: 3 })} className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" />\r\n                            <small className=\"form-text text-danger\">\r\n                                {errors.name && errors.name.type === \"required\" && <span>Vui lòng không để trống</span>}\r\n                                {errors.name && errors.name.type === \"minLength\" && <span>Tên phải lớn hơn hoặc bằng 3 ký tự</span>}\r\n                            </small>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-6\">\r\n                        <div className=\"mb-3\" style={mb}>\r\n                            <label style={label} htmlFor=\"formFile\" className=\"form-label\">Giọng nói<span style={span}>*</span></label>\r\n                            <input name='audios3' ref={register({ required: true })} className=\"form-control\" type=\"file\" accept=\"audio\" id=\"formFile\" />\r\n                            <small className=\"form-text text-danger\">\r\n                                {errors.name && errors.name.type === \"required\" && <span>Vui lòng không để trống</span>}\r\n                            </small>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n                        <div className=\"mb-3\" style={mb}>\r\n                            <label style={label} htmlFor=\"exampleInputEmail1\" className=\"form-label\">Nội dung<span style={span}>*</span></label>\r\n                            <input name='text3' ref={register({ required: true, minLength: 3 })} className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" />\r\n                            <small className=\"form-text text-danger\">\r\n                                {errors.name && errors.name.type === \"required\" && <span>Vui lòng không để trống</span>}\r\n                                {errors.name && errors.name.type === \"minLength\" && <span>Tên phải lớn hơn hoặc bằng 3 ký tự</span>}\r\n                            </small>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"mb-3\" style={mb}>\r\n                    <label style={label} htmlFor=\"exampleInputEmail1\" className=\"form-label\">Họ tên<span style={span}>*</span></label>\r\n                    <input name='name' ref={register({ required: true, minLength: 3 })} className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" />\r\n                    <small className=\"form-text text-danger\">\r\n                        {errors.name && errors.name.type === \"required\" && <span>Vui lòng không để trống</span>}\r\n                        {errors.name && errors.name.type === \"minLength\" && <span>Tên phải lớn hơn hoặc bằng 3 ký tự</span>}\r\n                    </small>\r\n                </div>\r\n\r\n\r\n                <button style={button} type=\"submit\" className=\"btn btn-success\">Submit</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nVoice.propTypes = {\r\n\r\n}\r\n\r\nexport default Voice\r\n","C:\\Users\\DELL G3\\Desktop\\FSOFT\\test1\\react-project\\src\\component\\CheckVoice\\index.js",["111","112","113"],"import React, { useState } from 'react'\r\nimport axios from 'axios'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useForm } from 'react-hook-form'\r\nimport Swal from 'sweetalert2'\r\n\r\n\r\nconst form = {\r\n    // padding: '30px',\r\n    // position: 'relative',\r\n    // left: '380px'\r\n    margin: 'auto'\r\n};\r\nconst mb = {\r\n    width: '500px'\r\n};\r\nconst label = {\r\n    float: 'left'\r\n};\r\nconst button = {\r\n    position: 'relative',\r\n    left: '-370px',\r\n    top: '30px'\r\n};\r\nconst table = {\r\n    width: \"900px\",\r\n    margin: \"auto\",\r\n    position: \"relative\",\r\n    top: \"100px\"\r\n};\r\n\r\nconst CheckVoice = props => {\r\n    const history = useHistory()\r\n    const { register, handleSubmit, watch, errors } = useForm();\r\n    const users = [];\r\n    const [reportData, setData] = useState(users)\r\n    const onSubmit = dataCheck => Check(dataCheck);\r\n    const makeId = (length) => {\r\n        var result = '';\r\n        var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n        var charactersLength = characters.length;\r\n        for (var i = 0; i < length; i++) {\r\n            result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n        }\r\n        return result;\r\n    }\r\n\r\n    const Check = async (e) => {\r\n        const Data = new FormData();\r\n        Data.append('requestId', makeId(16));\r\n        Data.append('audious', e.audious1[0]);\r\n        // console.log(Data)\r\n        const dataCheck = await axios.post('http://52.221.81.214:4556/api/v1/voice/identify', Data, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            },\r\n        })\r\n\r\n        const res = dataCheck.data;\r\n        if (res.ErrorCode === 0) {\r\n            const data = res.Data;\r\n            console.log(data);\r\n        }\r\n        else {\r\n            history.push('/checkvoice')\r\n            Swal.fire(\r\n                'Giong noi khong chinh xac',\r\n                'You clicked the button!',\r\n                'error'\r\n            )\r\n        }\r\n        console.log(dataCheck)\r\n    }\r\n    return (\r\n        <div className='container'>\r\n\r\n\r\n\r\n            <h1 className=\"text-success\">Recognize Voice</h1>\r\n            <form style={form} onSubmit={handleSubmit(onSubmit)}>\r\n\r\n                <div className=\"mb-3\" style={mb}>\r\n                    <label style={label} htmlFor=\"formFile\" className=\"form-label\">Giọng nói</label>\r\n                    <input name='audious1' ref={register({ required: true })} className=\"form-control\" type=\"file\" id=\"formFile\" />\r\n                    <small className=\"form-text text-danger\">\r\n                        {errors.name && errors.name.type === \"required\" && <span>Vui lòng không để trống</span>}\r\n                    </small>\r\n                </div>\r\n                <button style={button} type=\"submit\" className=\"btn btn-success\">Submit</button>\r\n            </form>\r\n\r\n            <table style={table} className=\"table\">\r\n                <thead style={{ 'background-color': '#198754', color: 'white' }} className=\"thead-dark\">\r\n                    <tr>\r\n                        <th scope=\"col\">ID</th>\r\n                        <th scope=\"col\">Tên</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <th scope=\"row\">1</th>\r\n                        <td>hà</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nCheckVoice.propTypes = {\r\n\r\n}\r\n\r\nexport default CheckVoice\r\n","C:\\Users\\DELL G3\\Desktop\\FSOFT\\Reactjs\\fsoft-test33\\src\\index.js",[],["114","115"],"C:\\Users\\DELL G3\\Desktop\\FSOFT\\Reactjs\\fsoft-test33\\src\\reportWebVitals.js",[],"C:\\Users\\DELL G3\\Desktop\\FSOFT\\Reactjs\\fsoft-test33\\src\\App.js",[],"C:\\Users\\DELL G3\\Desktop\\FSOFT\\Reactjs\\fsoft-test33\\src\\routers\\index.js",["116","117","118","119","120","121"],"C:\\Users\\DELL G3\\Desktop\\FSOFT\\Reactjs\\fsoft-test33\\src\\component\\Register\\index.js",["122"],"C:\\Users\\DELL G3\\Desktop\\FSOFT\\Reactjs\\fsoft-test33\\src\\component\\Voice\\index.js",["123"],"import React from 'react'\r\nimport axios from 'axios'\r\nimport { useForm } from 'react-hook-form'\r\nimport { useHistory } from 'react-router-dom'\r\nimport Swal from 'sweetalert2'\r\nconst form = {\r\n    padding: '100px',\r\n    position: 'relative',\r\n    left: '380px'\r\n};\r\nconst mb = {\r\n    width: '400px',\r\n    'margin-left': '120px',\r\n};\r\nconst label = {\r\n    float: 'left'\r\n};\r\nconst button = {\r\n    position: 'relative',\r\n    top: '20px'\r\n};\r\nconst span = {\r\n    color: 'red'\r\n};\r\n\r\n\r\nconst Voice = props => {\r\n    const { register, handleSubmit, watch, errors } = useForm();\r\n    const onSubmit = data => voice(data);\r\n    const history = useHistory()\r\n\r\n    const voice = async (e) => {\r\n        const Data = new FormData();\r\n        console.log(e.audios1[0])\r\n        if (e.audios1[0] != null || undefined) {\r\n            Data.append('audios', e.audios1[0])\r\n        }\r\n        if (e.audios2[0] != null || undefined) {\r\n            Data.append('audios', e.audios2[0])\r\n        }\r\n        if (e.audios3[0] != null || undefined) {\r\n            Data.append('audios', e.audios3[0])\r\n        }\r\n\r\n\r\n        if (e.audios1[0] != null || undefined) {\r\n            Data.append('text[]', e.text1)\r\n        }\r\n        if (e.audios2[0] != null || undefined) {\r\n            Data.append('text[]', e.text2)\r\n        }\r\n        if (e.audios3[0] != null || undefined) {\r\n            Data.append('text[]', e.text3)\r\n        }\r\n        Data.append('name', e.name)\r\n\r\n        const data = await axios.post('http://52.221.81.214:4556/api/v1/voice/register', Data, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            },\r\n        })\r\n        console.log(data)\r\n\r\n        history.push('/voice')\r\n        Swal.fire(\r\n            'Thành công',\r\n            'You clicked the button!',\r\n            'success'\r\n        )\r\n    }\r\n    return (\r\n        <div className=\"container\">\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n                <h1 className=\"text-success\">Register Voice</h1>\r\n                <div className=\"row\">\r\n                    <div className=\"col-6\">\r\n                        <div className=\"mb-3\" style={mb}>\r\n                            <label style={label} htmlFor=\"formFile\" className=\"form-label\">Giọng nói<span style={span}>*</span></label>\r\n                            <input name='audios1' ref={register({ required: true })} className=\"form-control\" type=\"file\" accept=\"audio\" id=\"formFile\" />\r\n                            <small className=\"form-text text-danger\">\r\n                                {errors.name && errors.name.type === \"required\" && <span>Vui lòng không để trống</span>}\r\n                            </small>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n                        <div className=\"mb-3\" style={mb}>\r\n                            <label style={label} htmlFor=\"exampleInputEmail1\" className=\"form-label\">Nội dung<span style={span}>*</span></label>\r\n                            <input name='text1' ref={register({ required: true, minLength: 3 })} className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" />\r\n                            <small className=\"form-text text-danger\">\r\n                                {errors.name && errors.name.type === \"required\" && <span>Vui lòng không để trống</span>}\r\n                                {errors.name && errors.name.type === \"minLength\" && <span>Tên phải lớn hơn hoặc bằng 3 ký tự</span>}\r\n                            </small>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-6\">\r\n                        <div className=\"mb-3\" style={mb}>\r\n                            <label style={label} htmlFor=\"formFile\" className=\"form-label\">Giọng nói<span style={span}>*</span></label>\r\n                            <input name='audios2' ref={register({ required: true })} className=\"form-control\" type=\"file\" accept=\"audio\" id=\"formFile\" />\r\n                            <small className=\"form-text text-danger\">\r\n                                {errors.name && errors.name.type === \"required\" && <span>Vui lòng không để trống</span>}\r\n                            </small>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n                        <div className=\"mb-3\" style={mb}>\r\n                            <label style={label} htmlFor=\"exampleInputEmail1\" className=\"form-label\">Nội dung<span style={span}>*</span></label>\r\n                            <input name='text2' ref={register({ required: true, minLength: 3 })} className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" />\r\n                            <small className=\"form-text text-danger\">\r\n                                {errors.name && errors.name.type === \"required\" && <span>Vui lòng không để trống</span>}\r\n                                {errors.name && errors.name.type === \"minLength\" && <span>Tên phải lớn hơn hoặc bằng 3 ký tự</span>}\r\n                            </small>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-6\">\r\n                        <div className=\"mb-3\" style={mb}>\r\n                            <label style={label} htmlFor=\"formFile\" className=\"form-label\">Giọng nói<span style={span}>*</span></label>\r\n                            <input name='audios3' ref={register({ required: true })} className=\"form-control\" type=\"file\" accept=\"audio\" id=\"formFile\" />\r\n                            <small className=\"form-text text-danger\">\r\n                                {errors.name && errors.name.type === \"required\" && <span>Vui lòng không để trống</span>}\r\n                            </small>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n                        <div className=\"mb-3\" style={mb}>\r\n                            <label style={label} htmlFor=\"exampleInputEmail1\" className=\"form-label\">Nội dung<span style={span}>*</span></label>\r\n                            <input name='text3' ref={register({ required: true, minLength: 3 })} className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" />\r\n                            <small className=\"form-text text-danger\">\r\n                                {errors.name && errors.name.type === \"required\" && <span>Vui lòng không để trống</span>}\r\n                                {errors.name && errors.name.type === \"minLength\" && <span>Tên phải lớn hơn hoặc bằng 3 ký tự</span>}\r\n                            </small>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"mb-3\" style={mb}>\r\n                    <label style={label} htmlFor=\"exampleInputEmail1\" className=\"form-label\">Họ tên<span style={span}>*</span></label>\r\n                    <input name='name' ref={register({ required: true, minLength: 3 })} className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" />\r\n                    <small className=\"form-text text-danger\">\r\n                        {errors.name && errors.name.type === \"required\" && <span>Vui lòng không để trống</span>}\r\n                        {errors.name && errors.name.type === \"minLength\" && <span>Tên phải lớn hơn hoặc bằng 3 ký tự</span>}\r\n                    </small>\r\n                </div>\r\n\r\n\r\n                <button style={button} type=\"submit\" className=\"btn btn-success\">Submit</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nVoice.propTypes = {\r\n\r\n}\r\n\r\nexport default Voice\r\n","C:\\Users\\DELL G3\\Desktop\\FSOFT\\Reactjs\\fsoft-test33\\src\\component\\Check\\index.js",["124","125","126","127","128","129"],"C:\\Users\\DELL G3\\Desktop\\FSOFT\\Reactjs\\fsoft-test33\\src\\component\\CheckVoice\\index.js",["130"],"import React, { useState } from 'react'\r\nimport axios from 'axios'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useForm } from 'react-hook-form'\r\nimport Swal from 'sweetalert2'\r\n\r\nconst mb = {\r\n    width: '500px',\r\n    margin: 'auto'\r\n};\r\nconst label = {\r\n    float: 'left'\r\n};\r\nconst button = {\r\n    margin: 'auto',\r\n};\r\nconst table = {\r\n    width: \"900px\",\r\n    margin: \"auto\",\r\n    position: \"relative\",\r\n    top: \"100px\"\r\n};\r\n\r\nconst CheckVoice = props => {\r\n    const history = useHistory()\r\n    const { register, handleSubmit, watch, errors } = useForm();\r\n    const users = [];\r\n    const [checkData, setData] = useState(users)\r\n    const onSubmit = dataCheck => Check(dataCheck);\r\n\r\n    const makeId = (length) => {\r\n        var result = '';\r\n        var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n        var charactersLength = characters.length;\r\n        for (var i = 0; i < length; i++) {\r\n            result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n        }\r\n        return result;\r\n    }\r\n\r\n    const Check = async (e) => {\r\n        const Data = new FormData();\r\n        Data.append('requestId', makeId(16));\r\n        Data.append('audious', e.audious1[0]);\r\n        // console.log(Data)\r\n        const dataCheck = await axios.post('http://52.221.81.214:4556/api/v1/voice/identify', Data, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            },\r\n        })\r\n\r\n        const res = dataCheck.data;\r\n        if (res.ErrorCode === 0) {\r\n            const data = res.Data;\r\n            setData(data.ls_audio[0].result);\r\n            console.log(data);\r\n        }\r\n        else {\r\n            history.push('/checkvoice')\r\n            Swal.fire(\r\n                'Giong noi khong chinh xac',\r\n                'You clicked the button!',\r\n                'error'\r\n            )\r\n        }\r\n    }\r\n    return (\r\n        <div className='container'>\r\n            <h1 style={{ paddingBottom: '50px' }} className=\"text-success\">Recognize Voice</h1>\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n                <div className=\"mb-3\" style={mb}>\r\n                    <label style={label} htmlFor=\"formFile\" className=\"form-label\">Giọng nói</label>\r\n                    <input name='audious1' ref={register({ required: true })} className=\"form-control\" type=\"file\" id=\"formFile\" />\r\n                    <small className=\"form-text text-danger\">\r\n                        {errors.name && errors.name.type === \"required\" && <span>Vui lòng không để trống</span>}\r\n                    </small>\r\n                </div>\r\n                <button style={button} type=\"submit\" className=\"btn btn-success\">Submit</button>\r\n            </form>\r\n\r\n            <table style={table} className=\"table\">\r\n                <thead style={{ 'background-color': '#28a745', color: 'white' }} >\r\n                    <tr>\r\n                        <th scope=\"col\">ID</th>\r\n                        <th scope=\"col\">Tên</th>\r\n                        <th scope=\"col\">Score</th>\r\n\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        checkData.map((el, index) => (\r\n                            <tr key={index}>\r\n                                <th scope=\"row\">{el.speaker_id}</th>\r\n                                <td>{el.name}</td>\r\n                                <td>{el.score}</td>\r\n\r\n                            </tr>\r\n                        ))\r\n                    }\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nCheckVoice.propTypes = {\r\n\r\n}\r\n\r\nexport default CheckVoice\r\n","C:\\Users\\DELL G3\\Desktop\\FSOFT\\Reactjs\\fsoft-test33\\src\\component\\RecognizeHistory\\index.js",["131","132","133","134","135"],"import React, { useState } from 'react'\r\nimport axios from 'axios'\r\nimport { useForm } from 'react-hook-form'\r\nimport { useHistory } from 'react-router-dom'\r\nimport * as FileSaver from 'file-saver';\r\nimport * as XLSX from 'xlsx';\r\n\r\nconst form = {\r\n    marginLeft: \"25px\",\r\n};\r\nconst h1 = {\r\n    \"text-align\": \"center\",\r\n    \"padding-top\": \"50px\"\r\n};\r\nconst align = {\r\n    position: \"relative\",\r\n    top: \"50px\",\r\n    left: \"85px\"\r\n};\r\nconst col = {\r\n    \"margin-top\": \"8px\",\r\n    position: \"relative\",\r\n    left: \"300px\",\r\n    top: \"-82px\"\r\n};\r\nconst table = {\r\n    width: \"900px\",\r\n    margin: \"auto\",\r\n    position: \"relative\",\r\n    top: \"100px\"\r\n};\r\nconst input = {\r\n    width: \"200px\",\r\n    position: \"relative\",\r\n}\r\nconst label = {\r\n    float: \"left\"\r\n}\r\nconst RecognizeHistory = props => {\r\n    const { register, handleSubmit, watch, errors } = useForm();\r\n    const users = [];\r\n    const [reportData, setData] = useState(users)\r\n    const onSubmit = data => search(data)\r\n\r\n    // const onSubmit = valueFrom => console.log(valueFrom);\r\n\r\n    const dataExport = [];\r\n    const search = async (e) => {\r\n        console.log(e);\r\n        const dateFrom = new Date(e.from);\r\n        const dateTo = new Date(e.to);\r\n        const unixFrom = dateFrom.getTime() / 1000;\r\n        const unixTo = dateTo.getTime() / 1000;\r\n        console.log('key');\r\n        console.log(unixFrom, unixTo);\r\n        const dataPayload = {\r\n            from: unixFrom,\r\n            to: unixTo + 86400\r\n        }\r\n        const token = e.key;\r\n        const data = await axios.post('https://ekyc-demo-api.trandata.io/api/v1/user/recognizeHistory', dataPayload, {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'apiKey': token\r\n            },\r\n        })\r\n\r\n        // exportToCSV(data.data.Data, 'test nhe');\r\n        // console.log(dataExport);\r\n        setData(data.data.Data)\r\n    }\r\n\r\n    const exportToCSV = (dataExport) => {\r\n        console.log(dataExport);\r\n        const fileType = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\r\n        const fileExtension = '.xlsx';\r\n        const dateNow = new Date();\r\n\r\n        //create fileName\r\n        const dateFile = dateNow.getTime();\r\n        const fileName = 'Report-' + dateFile;\r\n\r\n        //biến đổi data theo đúng yêu cầu\r\n        const custs = [];\r\n        for (let i = 0; i < dataExport.length; i++) {\r\n            const element = dataExport[i];\r\n            custs.push({\r\n                'SST': i + 1,\r\n                'Mã': element.idNumber,\r\n                'Tên': element.name,\r\n                'Ngày': element.createdDate,\r\n                'Giờ': element.createdTime,\r\n                'So sánh': element.idMatched,\r\n                'Xác nhận': element.confirm\r\n\r\n            });\r\n        }\r\n\r\n        //Create File\r\n        const ws = XLSX.utils.json_to_sheet(custs);\r\n        const wb = { Sheets: { 'data': ws }, SheetNames: ['data'] };\r\n        const excelBuffer = XLSX.write(wb, { bookType: 'xlsx', type: 'array' });\r\n        const data = new Blob([excelBuffer], { type: fileType });\r\n        FileSaver.saveAs(data, fileName + fileExtension);\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <form style={form} onSubmit={handleSubmit(onSubmit)}>\r\n                <h1 style={h1} className=\"text-dark\">Recognize History</h1>\r\n                <div style={align} className=\"form-row align-items-center\">\r\n\r\n                    <div className=\"\" style={{ 'width': '900px', marginTop: '20px', 'display': 'flex', 'alignItems': 'flex-end', 'justifyContent': 'space-around' }}>\r\n\r\n                        <div className=\"form-group\" style={{ textAlign: 'left' }}>\r\n                            <label htmlFor=\"formFile\">Authen Key</label>\r\n                            <input name='key' type=\"text\" className=\"form-control\" ref={register} />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\" style={{ textAlign: 'left' }}>\r\n                            <label htmlFor=\"formFile\">Form date</label>\r\n                            <input name='from' style={input} type=\"date\" className=\"form-control\" ref={register} />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\" style={{ textAlign: 'left' }}>\r\n                            <label htmlFor=\"formFile\">To date</label>\r\n                            <input name='to' style={input} type=\"date\" className=\"form-control\" ref={register} />\r\n                        </div>\r\n                        <button type=\"submit\" className=\"btn btn-dark mb-3\">Search</button>\r\n\r\n                        <button type=\"button\" onClick={() => exportToCSV(reportData)} className=\"btn btn-dark mb-3\">Export</button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n\r\n            <table style={table} className=\"table\">\r\n                <thead style={{ 'background-color': 'black', color: 'white' }} className=\"thead-dark\">\r\n                    <tr>\r\n                        <th scope=\"col\">ID</th>\r\n                        <th scope=\"col\">Mã</th>\r\n                        <th scope=\"col\">Tên</th>\r\n                        <th scope=\"col\">Ngày</th>\r\n                        <th scope=\"col\">Giờ</th>\r\n                        <th scope=\"col\">So sánh</th>\r\n                        <th scope=\"col\">Xác nhận</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        reportData.map((el, index) => (\r\n                            <tr key={index}>\r\n                                <th scope=\"row\">{el.id}</th>\r\n                                <td>{el.idNumber}</td>\r\n                                <td>{el.name}</td>\r\n                                <td>{el.createdDate}</td>\r\n                                <td>{el.createdTime}</td>\r\n                                <td>{el.idMatched}</td>\r\n                                <td>{el.confirm}</td>\r\n                            </tr>\r\n                        ))\r\n                    }\r\n\r\n\r\n                </tbody>\r\n            </table>\r\n        </div >\r\n\r\n    )\r\n}\r\n\r\nRecognizeHistory.propTypes = {\r\n\r\n}\r\n\r\nexport default RecognizeHistory\r\n","C:\\Users\\DELL G3\\Desktop\\FSOFT\\Reactjs\\fsoft-test33\\src\\component\\VerifyHistory\\index.js",["136","137","138","139","140","141"],"C:\\Users\\DELL G3\\Desktop\\FSOFT\\Reactjs\\fsoft-test33\\src\\component\\LayoutHistory\\index.js",["142","143","144"],{"ruleId":"145","replacedBy":"146"},{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","severity":1,"message":"150","line":2,"column":50,"nodeType":"151","messageId":"152","endLine":2,"endColumn":54},{"ruleId":"149","severity":1,"message":"153","line":27,"column":37,"nodeType":"151","messageId":"152","endLine":27,"endColumn":42},{"ruleId":"149","severity":1,"message":"153","line":27,"column":37,"nodeType":"151","messageId":"152","endLine":27,"endColumn":42},{"ruleId":"154","severity":1,"message":"155","line":44,"column":60,"nodeType":"156","messageId":"157","endLine":44,"endColumn":61},{"ruleId":"149","severity":1,"message":"150","line":2,"column":50,"nodeType":"151","messageId":"152","endLine":2,"endColumn":54},{"ruleId":"149","severity":1,"message":"158","line":1,"column":17,"nodeType":"151","messageId":"152","endLine":1,"endColumn":26},{"ruleId":"149","severity":1,"message":"159","line":22,"column":7,"nodeType":"151","messageId":"152","endLine":22,"endColumn":10},{"ruleId":"149","severity":1,"message":"153","line":45,"column":37,"nodeType":"151","messageId":"152","endLine":45,"endColumn":42},{"ruleId":"149","severity":1,"message":"160","line":45,"column":44,"nodeType":"151","messageId":"152","endLine":45,"endColumn":50},{"ruleId":"149","severity":1,"message":"161","line":51,"column":11,"nodeType":"151","messageId":"152","endLine":51,"endColumn":18},{"ruleId":"149","severity":1,"message":"162","line":73,"column":11,"nodeType":"151","messageId":"152","endLine":73,"endColumn":21},{"ruleId":"149","severity":1,"message":"153","line":28,"column":37,"nodeType":"151","messageId":"152","endLine":28,"endColumn":42},{"ruleId":"149","severity":1,"message":"153","line":34,"column":37,"nodeType":"151","messageId":"152","endLine":34,"endColumn":42},{"ruleId":"149","severity":1,"message":"163","line":36,"column":12,"nodeType":"151","messageId":"152","endLine":36,"endColumn":22},{"ruleId":"149","severity":1,"message":"164","line":36,"column":24,"nodeType":"151","messageId":"152","endLine":36,"endColumn":31},{"ruleId":"145","replacedBy":"165"},{"ruleId":"147","replacedBy":"166"},{"ruleId":"149","severity":1,"message":"150","line":2,"column":50,"nodeType":"151","messageId":"152","endLine":2,"endColumn":54},{"ruleId":"149","severity":1,"message":"167","line":3,"column":8,"nodeType":"151","messageId":"152","endLine":3,"endColumn":16},{"ruleId":"149","severity":1,"message":"168","line":4,"column":8,"nodeType":"151","messageId":"152","endLine":4,"endColumn":13},{"ruleId":"149","severity":1,"message":"169","line":5,"column":8,"nodeType":"151","messageId":"152","endLine":5,"endColumn":21},{"ruleId":"149","severity":1,"message":"170","line":6,"column":8,"nodeType":"151","messageId":"152","endLine":6,"endColumn":24},{"ruleId":"149","severity":1,"message":"171","line":8,"column":8,"nodeType":"151","messageId":"152","endLine":8,"endColumn":13},{"ruleId":"149","severity":1,"message":"153","line":25,"column":37,"nodeType":"151","messageId":"152","endLine":25,"endColumn":42},{"ruleId":"149","severity":1,"message":"153","line":28,"column":37,"nodeType":"151","messageId":"152","endLine":28,"endColumn":42},{"ruleId":"149","severity":1,"message":"153","line":22,"column":37,"nodeType":"151","messageId":"152","endLine":22,"endColumn":42},{"ruleId":"149","severity":1,"message":"172","line":25,"column":12,"nodeType":"151","messageId":"152","endLine":25,"endColumn":19},{"ruleId":"149","severity":1,"message":"173","line":67,"column":17,"nodeType":"151","messageId":"152","endLine":67,"endColumn":23},{"ruleId":"149","severity":1,"message":"174","line":68,"column":13,"nodeType":"151","messageId":"152","endLine":68,"endColumn":20},{"ruleId":"175","severity":1,"message":"176","line":108,"column":81,"nodeType":"177","endLine":108,"endColumn":115},{"ruleId":"178","severity":1,"message":"179","line":118,"column":21,"nodeType":"180","endLine":118,"endColumn":107},{"ruleId":"149","severity":1,"message":"153","line":26,"column":37,"nodeType":"151","messageId":"152","endLine":26,"endColumn":42},{"ruleId":"149","severity":1,"message":"181","line":4,"column":10,"nodeType":"151","messageId":"152","endLine":4,"endColumn":20},{"ruleId":"149","severity":1,"message":"159","line":20,"column":7,"nodeType":"151","messageId":"152","endLine":20,"endColumn":10},{"ruleId":"149","severity":1,"message":"153","line":40,"column":37,"nodeType":"151","messageId":"152","endLine":40,"endColumn":42},{"ruleId":"149","severity":1,"message":"160","line":40,"column":44,"nodeType":"151","messageId":"152","endLine":40,"endColumn":50},{"ruleId":"149","severity":1,"message":"162","line":47,"column":11,"nodeType":"151","messageId":"152","endLine":47,"endColumn":21},{"ruleId":"149","severity":1,"message":"158","line":1,"column":17,"nodeType":"151","messageId":"152","endLine":1,"endColumn":26},{"ruleId":"149","severity":1,"message":"159","line":20,"column":7,"nodeType":"151","messageId":"152","endLine":20,"endColumn":10},{"ruleId":"149","severity":1,"message":"153","line":43,"column":37,"nodeType":"151","messageId":"152","endLine":43,"endColumn":42},{"ruleId":"149","severity":1,"message":"160","line":43,"column":44,"nodeType":"151","messageId":"152","endLine":43,"endColumn":50},{"ruleId":"149","severity":1,"message":"161","line":49,"column":11,"nodeType":"151","messageId":"152","endLine":49,"endColumn":18},{"ruleId":"149","severity":1,"message":"162","line":71,"column":11,"nodeType":"151","messageId":"152","endLine":71,"endColumn":21},{"ruleId":"149","severity":1,"message":"182","line":2,"column":8,"nodeType":"151","messageId":"152","endLine":2,"endColumn":17},{"ruleId":"149","severity":1,"message":"169","line":3,"column":8,"nodeType":"151","messageId":"152","endLine":3,"endColumn":21},{"ruleId":"149","severity":1,"message":"170","line":4,"column":8,"nodeType":"151","messageId":"152","endLine":4,"endColumn":24},"no-native-reassign",["183"],"no-negated-in-lhs",["184"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'watch' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'useEffect' is defined but never used.","'col' is assigned a value but never used.","'errors' is assigned a value but never used.","'history' is assigned a value but never used.","'dataExport' is assigned a value but never used.","'reportData' is assigned a value but never used.","'setData' is assigned a value but never used.",["183"],["184"],"'Register' is defined but never used.","'Check' is defined but never used.","'VerifyHistory' is defined but never used.","'RecognizeHistory' is defined but never used.","'Voice' is defined but never used.","'picture' is assigned a value but never used.","'target' is assigned a value but never used.","'counter' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useHistory' is defined but never used.","'PropTypes' is defined but never used.","no-global-assign","no-unsafe-negation"]